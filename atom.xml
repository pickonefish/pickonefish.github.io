<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PickOneFish&#39;s Blog</title>
  
  <subtitle>撿一尾</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pickonefish.github.io/"/>
  <updated>2021-11-04T13:10:11.642Z</updated>
  <id>https://pickonefish.github.io/</id>
  
  <author>
    <name>PickOneFish</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BPMN | Data</title>
    <link href="https://pickonefish.github.io/bpmn-data/"/>
    <id>https://pickonefish.github.io/bpmn-data/</id>
    <published>2020-12-16T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h1><h2 id="Data-Objects"><a href="#Data-Objects" class="headerlink" title="Data Objects"></a>Data Objects</h2><h2 id="Data-Inputs"><a href="#Data-Inputs" class="headerlink" title="Data Inputs"></a>Data Inputs</h2><h2 id="Data-Outputs"><a href="#Data-Outputs" class="headerlink" title="Data Outputs"></a>Data Outputs</h2><h2 id="Data-Stores"><a href="#Data-Stores" class="headerlink" title="Data Stores"></a>Data Stores</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Data&quot;&gt;&lt;a href=&quot;#Data&quot; class=&quot;headerlink&quot; title=&quot;Data&quot;&gt;&lt;/a&gt;Data&lt;/h1&gt;&lt;h2 id=&quot;Data-Objects&quot;&gt;&lt;a href=&quot;#Data-Objects&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Database Scheme</title>
    <link href="https://pickonefish.github.io/bpmn-database-scheme/"/>
    <id>https://pickonefish.github.io/bpmn-database-scheme/</id>
    <published>2020-12-16T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:left">#</th><th style="text-align:left">Table</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">ACT_GE_*</td><td style="text-align:left">General</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ACT_RE_*</td><td style="text-align:left">Repository</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">ACT_ID_*</td><td style="text-align:left">Identity</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ACT_RU_*</td><td style="text-align:left">Runtime</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">ACT_HI_*</td><td style="text-align:left">History</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">ACT_DMN_*</td><td style="text-align:left">DMN</td></tr></tbody></table><hr><h1 id="ACT-GE"><a href="#ACT-GE" class="headerlink" title="ACT_GE"></a>ACT_GE</h1><table><thead><tr><th style="text-align:left">#</th><th style="text-align:left">Table</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">ACT_GE_BYTEARRAY</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ACT_GE_PROPERTY</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">ACT_GE_SCHEMA_LOG</td></tr></tbody></table><hr><h1 id="ACT-RE"><a href="#ACT-RE" class="headerlink" title="ACT_RE"></a>ACT_RE</h1><table><thead><tr><th style="text-align:left">#</th><th style="text-align:left">Table</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">ACT_RE_CASE_DEF</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ACT_RE_DECISION_DEF</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">ACT_RE_DECISION_REQ_DEF</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ACT_RE_DEPLOYMENT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">ACT_RE_PROCDEF</td></tr></tbody></table><hr><h1 id="ACT-ID"><a href="#ACT-ID" class="headerlink" title="ACT_ID"></a>ACT_ID</h1><table><thead><tr><th style="text-align:left">#</th><th style="text-align:left">Table</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">ACT_ID_GROUP</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ACT_ID_INFO</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">ACT_ID_MEMBERSHIP</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ACT_ID_TENANT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">ACT_ID_TENANT_MEMBER</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">ACT_ID_USER</td></tr></tbody></table><hr><h1 id="ACT-RU"><a href="#ACT-RU" class="headerlink" title="ACT_RU"></a>ACT_RU</h1><table><thead><tr><th style="text-align:left">#</th><th style="text-align:left">Table</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">ACT_RU_AUTHORIZATION</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ACT_RU_BATCH</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">ACT_RU_CASE_EXECUTION</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ACT_RU_CASE_SENTRY_PART</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">ACT_RU_EVENT_SUBSCR</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">ACT_RU_EXECUTION</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">ACT_RU_EXT_TASK</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">ACT_RU_FILTER</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">ACT_RU_IDENTITYLINK</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">ACT_RU_INCIDENT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">ACT_RU_JOB</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">ACT_RU_JOBDEF</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">ACT_RU_METER_LOG</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">ACT_RU_TASK</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">ACT_RU_VARIABLE</td></tr></tbody></table><hr><h1 id="ACT-HI"><a href="#ACT-HI" class="headerlink" title="ACT_HI"></a>ACT_HI</h1><table><thead><tr><th style="text-align:left">#</th><th style="text-align:left">Table</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">ACT_HI_ACTINST</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ACT_HI_ATTACHMENT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">ACT_HI_BATCH</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ACT_HI_CASEACTINST</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">ACT_HI_CASEINST</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">ACT_HI_COMMENT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">ACT_HI_DEC_IN</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">ACT_HI_DEC_OUT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">ACT_HI_DECINST</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">ACT_HI_DETAIL</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">ACT_HI_EXT_TASK_LOG</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">ACT_HI_IDENTITYLINK</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">ACT_HI_INCIDENT</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">ACT_HI_JOB_LOG</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">ACT_HI_OP_LOG</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">ACT_HI_PROCINST</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">17</td><td style="text-align:left">ACT_HI_TASKINST</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">18</td><td style="text-align:left">ACT_HI_VARINST</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;#&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Table&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Description&lt;/th&gt;

      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Gateways</title>
    <link href="https://pickonefish.github.io/bpmn-gateways/"/>
    <id>https://pickonefish.github.io/bpmn-gateways/</id>
    <published>2020-12-15T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gateways"><a href="#Gateways" class="headerlink" title="Gateways"></a>Gateways</h1><h2 id="Exclusive-gateway"><a href="#Exclusive-gateway" class="headerlink" title="Exclusive gateway"></a>Exclusive gateway</h2><blockquote><p>You use an exclusive gateway to model a decision in your process. When execution arrives at an exclusive gateway, the outgoing sequence flows are evaluated in the order in which they are defined. The first sequence flow whose condition evaluates to true, or which does not have a condition set, is selected and the process continues.</p></blockquote><h2 id="Parallel-gateway"><a href="#Parallel-gateway" class="headerlink" title="Parallel gateway"></a>Parallel gateway</h2><blockquote><p>You use a parallel gateway to model concurrency in a process. It allows you to fork multiple outgoing paths of execution or join multiple incoming paths of execution.</p></blockquote><h2 id="Inclusive-gateway"><a href="#Inclusive-gateway" class="headerlink" title="Inclusive gateway"></a>Inclusive gateway</h2><blockquote><p>You use an inclusive to join and fork multiple sequence flows based on conditions.</p></blockquote><h2 id="Event-based-gateway"><a href="#Event-based-gateway" class="headerlink" title="Event based gateway"></a>Event based gateway</h2><blockquote><p>You use an event gateway to route process flow based on events.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Gateways&quot;&gt;&lt;a href=&quot;#Gateways&quot; class=&quot;headerlink&quot; title=&quot;Gateways&quot;&gt;&lt;/a&gt;Gateways&lt;/h1&gt;&lt;h2 id=&quot;Exclusive-gateway&quot;&gt;&lt;a href=&quot;#Exclusive-ga
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Events | Boundary Events | 邊界事件</title>
    <link href="https://pickonefish.github.io/bpmn-events-boundary-events/"/>
    <id>https://pickonefish.github.io/bpmn-events-boundary-events/</id>
    <published>2020-12-14T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>事件可以依【發生位置】與【特性】來分類</p><ul><li><p>以【發生位置】分為</p><ul><li>「開始事件」</li><li>「中間事件」<ul><li>可以再依【發生位置】劃分出「邊界事件」</li></ul></li><li>「結束事件」</li></ul></li><li><p>以【特性】分為</p><ul><li>「接收 (Catching) 事件」</li><li>「拋出 (Thowing) 事件」</li></ul></li></ul></li></ul><h1 id="Boundary-Events"><a href="#Boundary-Events" class="headerlink" title="Boundary Events"></a>Boundary Events</h1><p><strong>邊界事件</strong></p><ul><li><strong>附屬</strong> (依附) 於流程活動 (如：任務 Task、子流程 Sub-Process) 的事件。</li><li>屬於<ul><li>中間 (Intermediate) 事件</li><li>接收 (Catching) 事件</li></ul></li></ul><h2 id="Timer-Boundary-Event"><a href="#Timer-Boundary-Event" class="headerlink" title="Timer Boundary Event"></a>Timer Boundary Event</h2><p><strong>定時器邊界事件</strong></p><blockquote><p>A boundary timer event puts a timer on the activity it is defined on. When the timer fires, the sequence flow going out the boundary event is followed.</p></blockquote><ul><li><p>當流程到達 <font color="#008000"><strong>定時器邊界事件</strong></font> 所在的流程活動時，<br>經過 <u>所設定的時間後</u> 會觸發 <font color="#008000"><strong>定時器邊界事件</strong></font> ，<br>此時 <font color="#008000"><strong>定時器邊界事件</strong></font> 所在的任務會被中斷 (cancelActivity = true)，<br>流程會從 <font color="#008000"><strong>定時器邊界事件</strong></font> 離開，<br>走向 <font color="#008000"><strong>定時器邊界事件</strong></font> 所指向的另一個流程活動。</p></li><li><p>cancelActivity 屬性，用來設定是否中斷 定時器邊界事件 所在的任務</p><ul><li>true: 中斷 (<strong>可中斷</strong> 定時器邊界事件)</li><li>false: 不中斷 (<strong>不可中斷</strong> 定時器邊界事件)</li></ul></li></ul><!-- TODO: 流程圖 --><h2 id="Error-Boundary-Event"><a href="#Error-Boundary-Event" class="headerlink" title="Error Boundary Event"></a>Error Boundary Event</h2><p><strong>錯誤邊界事件</strong></p><blockquote><p>A boundary error event catches an error that is thrown within the boundaries of the activity the event is based on and continues process execution from the event.</p></blockquote><ul><li>用於接收子流程中拋出的錯誤</li><li>errorRef 屬性<ul><li>在錯誤邊界事件沒有使用 errorRef 屬性的情況下，錯誤邊界事件將接收所有的錯誤事件。</li><li>在錯誤邊界事件有使用 errorRef 屬性的情況下，錯誤邊界事件只會接收與指定的 errorCode 相同的 error</li></ul></li></ul><!-- TODO: 流程圖 --><h2 id="Signal-Boundary-Event"><a href="#Signal-Boundary-Event" class="headerlink" title="Signal Boundary Event"></a>Signal Boundary Event</h2><p><strong>信號邊界事件</strong></p><blockquote><p>A boundary signal event listens to a signal being fired (from within the process instance or system-wide) while the activity upon which the event is defined is active.</p></blockquote><!-- TODO: 流程圖 --><h2 id="Message-Boundary-Event"><a href="#Message-Boundary-Event" class="headerlink" title="Message Boundary Event"></a>Message Boundary Event</h2><p><strong>訊息邊界事件</strong></p><blockquote><p>A boundary message event listens to a message being received while the activity upon which the event is defined is active.</p></blockquote><!-- TODO: 流程圖 --><h2 id="Cancel-Boundary-Event"><a href="#Cancel-Boundary-Event" class="headerlink" title="Cancel Boundary Event"></a>Cancel Boundary Event</h2><p><strong>取消邊界事件</strong></p><!-- TODO: 流程圖 --><h2 id="Compensation-Boundary-Event"><a href="#Compensation-Boundary-Event" class="headerlink" title="Compensation Boundary Event"></a>Compensation Boundary Event</h2><p><strong>回饋邊界事件</strong></p><!-- TODO: 流程圖 -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;事件可以依【發生位置】與【特性】來分類&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以【發生位置】分為&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「開
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Events | Intermediate Catching Events | 中間接收事件</title>
    <link href="https://pickonefish.github.io/bpmn-events-intermediate-catching-events/"/>
    <id>https://pickonefish.github.io/bpmn-events-intermediate-catching-events/</id>
    <published>2020-12-13T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Intermediate-catching-events"><a href="#Intermediate-catching-events" class="headerlink" title="Intermediate catching events"></a>Intermediate catching events</h1><h2 id="Message"><a href="#Message" class="headerlink" title="Message*"></a>Message*</h2><h2 id="Timer"><a href="#Timer" class="headerlink" title="Timer*"></a>Timer*</h2><h2 id="Conditional"><a href="#Conditional" class="headerlink" title="Conditional*"></a>Conditional*</h2><h2 id="Link"><a href="#Link" class="headerlink" title="Link*"></a>Link*</h2><h2 id="Signal"><a href="#Signal" class="headerlink" title="Signal*"></a>Signal*</h2><h2 id="Mutiple"><a href="#Mutiple" class="headerlink" title="Mutiple"></a>Mutiple</h2><h2 id="Parallel-Multiple"><a href="#Parallel-Multiple" class="headerlink" title="Parallel Multiple"></a>Parallel Multiple</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Intermediate-catching-events&quot;&gt;&lt;a href=&quot;#Intermediate-catching-events&quot; class=&quot;headerlink&quot; title=&quot;Intermediate catching events&quot;&gt;&lt;/a&gt;In
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Events | Intermediate throwing events | 中間拋出事件</title>
    <link href="https://pickonefish.github.io/bpmn-events-intermediate-throwing-events/"/>
    <id>https://pickonefish.github.io/bpmn-events-intermediate-throwing-events/</id>
    <published>2020-12-12T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Intermediate-throwing-events"><a href="#Intermediate-throwing-events" class="headerlink" title="Intermediate throwing events"></a>Intermediate throwing events</h1><h2 id="None"><a href="#None" class="headerlink" title="None*"></a>None*</h2><h2 id="Message"><a href="#Message" class="headerlink" title="Message*"></a>Message*</h2><h2 id="Escalation"><a href="#Escalation" class="headerlink" title="Escalation*"></a>Escalation*</h2><h2 id="Compensation"><a href="#Compensation" class="headerlink" title="Compensation*"></a>Compensation*</h2><h2 id="Link"><a href="#Link" class="headerlink" title="Link*"></a>Link*</h2><h2 id="Signal"><a href="#Signal" class="headerlink" title="Signal*"></a>Signal*</h2><h2 id="Mutiple"><a href="#Mutiple" class="headerlink" title="Mutiple"></a>Mutiple</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Intermediate-throwing-events&quot;&gt;&lt;a href=&quot;#Intermediate-throwing-events&quot; class=&quot;headerlink&quot; title=&quot;Intermediate throwing events&quot;&gt;&lt;/a&gt;In
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Events | End Events | 結束事件</title>
    <link href="https://pickonefish.github.io/bpmn-events-end-events/"/>
    <id>https://pickonefish.github.io/bpmn-events-end-events/</id>
    <published>2020-12-11T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="End-Events"><a href="#End-Events" class="headerlink" title="End Events"></a>End Events</h1><h2 id="None"><a href="#None" class="headerlink" title="None"></a>None</h2><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><h2 id="Cancel"><a href="#Cancel" class="headerlink" title="Cancel"></a>Cancel</h2><h2 id="Termial"><a href="#Termial" class="headerlink" title="Termial"></a>Termial</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;End-Events&quot;&gt;&lt;a href=&quot;#End-Events&quot; class=&quot;headerlink&quot; title=&quot;End Events&quot;&gt;&lt;/a&gt;End Events&lt;/h1&gt;&lt;h2 id=&quot;None&quot;&gt;&lt;a href=&quot;#None&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Events | Start Events | 開始事件</title>
    <link href="https://pickonefish.github.io/bpmn-events-start-events/"/>
    <id>https://pickonefish.github.io/bpmn-events-start-events/</id>
    <published>2020-12-10T18:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Start-Events"><a href="#Start-Events" class="headerlink" title="Start Events"></a>Start Events</h1><h2 id="None"><a href="#None" class="headerlink" title="None"></a>None</h2><h2 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h2><h2 id="Message"><a href="#Message" class="headerlink" title="Message"></a>Message</h2><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Start-Events&quot;&gt;&lt;a href=&quot;#Start-Events&quot; class=&quot;headerlink&quot; title=&quot;Start Events&quot;&gt;&lt;/a&gt;Start Events&lt;/h1&gt;&lt;h2 id=&quot;None&quot;&gt;&lt;a href=&quot;#None&quot; cla
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Activities | Call Activity</title>
    <link href="https://pickonefish.github.io/bpmn-activities-call-activity/"/>
    <id>https://pickonefish.github.io/bpmn-activities-call-activity/</id>
    <published>2020-12-09T16:00:03.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Call-Activity"><a href="#Call-Activity" class="headerlink" title="Call Activity"></a>Call Activity</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Call-Activity&quot;&gt;&lt;a href=&quot;#Call-Activity&quot; class=&quot;headerlink&quot; title=&quot;Call Activity&quot;&gt;&lt;/a&gt;Call Activity&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Activities | Event Subprocess</title>
    <link href="https://pickonefish.github.io/bpmn-activities-event-subprocess/"/>
    <id>https://pickonefish.github.io/bpmn-activities-event-subprocess/</id>
    <published>2020-12-08T16:00:04.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Event-Subprocess"><a href="#Event-Subprocess" class="headerlink" title="Event Subprocess"></a>Event Subprocess</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Event-Subprocess&quot;&gt;&lt;a href=&quot;#Event-Subprocess&quot; class=&quot;headerlink&quot; title=&quot;Event Subprocess&quot;&gt;&lt;/a&gt;Event Subprocess&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Activities | Subprocess</title>
    <link href="https://pickonefish.github.io/bpmn-activities-subprocess/"/>
    <id>https://pickonefish.github.io/bpmn-activities-subprocess/</id>
    <published>2020-12-07T16:00:02.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Subprocess"><a href="#Subprocess" class="headerlink" title="Subprocess"></a>Subprocess</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Subprocess&quot;&gt;&lt;a href=&quot;#Subprocess&quot; class=&quot;headerlink&quot; title=&quot;Subprocess&quot;&gt;&lt;/a&gt;Subprocess&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Activities | Tasks</title>
    <link href="https://pickonefish.github.io/bpmn-activities-tasks/"/>
    <id>https://pickonefish.github.io/bpmn-activities-tasks/</id>
    <published>2020-12-06T16:00:01.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a>Tasks</h1><p>Task 在 BPMN 流程中是重要的元素, 當一個活動無法在細分更詳細時, 可以使用 Task. 通常是一個人或是應用程式將執行任務時執行 BPMN Task.</p><p>在 BPMN 2.0 中, 有各種 Task 代表更具體的行為.</p><h2 id="User-Task"><a href="#User-Task" class="headerlink" title="User Task"></a>User Task</h2><h2 id="Script-Task"><a href="#Script-Task" class="headerlink" title="Script Task"></a>Script Task</h2><h2 id="Service-Task"><a href="#Service-Task" class="headerlink" title="Service Task"></a>Service Task</h2><h2 id="Send-Task"><a href="#Send-Task" class="headerlink" title="Send Task"></a>Send Task</h2><h2 id="Business-Rule-Task"><a href="#Business-Rule-Task" class="headerlink" title="Business Rule Task"></a>Business Rule Task</h2><h2 id="Manual-Task"><a href="#Manual-Task" class="headerlink" title="Manual Task"></a>Manual Task</h2><h2 id="Receive-Task"><a href="#Receive-Task" class="headerlink" title="Receive Task"></a>Receive Task</h2><h2 id="Undefined-Task"><a href="#Undefined-Task" class="headerlink" title="Undefined Task"></a>Undefined Task</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h2><ul><li><a href="https://www.visual-paradigm.com/guide/bpmn/bpmn-activity-types-explained/#bpmn-service-task" target="_blank" rel="noopener">https://www.visual-paradigm.com/guide/bpmn/bpmn-activity-types-explained/#bpmn-service-task</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Tasks&quot;&gt;&lt;a href=&quot;#Tasks&quot; class=&quot;headerlink&quot; title=&quot;Tasks&quot;&gt;&lt;/a&gt;Tasks&lt;/h1&gt;&lt;p&gt;Task 在 BPMN 流程中是重要的元素, 當一個活動無法在細分更詳細時, 可以使用 Task. 通常是一個人或是
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>BPMN | Activities</title>
    <link href="https://pickonefish.github.io/bpmn-activities/"/>
    <id>https://pickonefish.github.io/bpmn-activities/</id>
    <published>2020-12-05T16:00:00.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Activities"><a href="#Activities" class="headerlink" title="Activities"></a>Activities</h1><h2 id="BPMN-Task"><a href="#BPMN-Task" class="headerlink" title="BPMN Task"></a>BPMN Task</h2><h2 id="BPMN-Sub-Process"><a href="#BPMN-Sub-Process" class="headerlink" title="BPMN Sub-Process"></a>BPMN Sub-Process</h2><h2 id="BPMN-Call-Activity"><a href="#BPMN-Call-Activity" class="headerlink" title="BPMN Call Activity"></a>BPMN Call Activity</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h2><ul><li><a href="https://www.visual-paradigm.com/guide/bpmn/bpmn-activity-types-explained/#bpmn-service-task" target="_blank" rel="noopener">https://www.visual-paradigm.com/guide/bpmn/bpmn-activity-types-explained/#bpmn-service-task</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Activities&quot;&gt;&lt;a href=&quot;#Activities&quot; class=&quot;headerlink&quot; title=&quot;Activities&quot;&gt;&lt;/a&gt;Activities&lt;/h1&gt;&lt;h2 id=&quot;BPMN-Task&quot;&gt;&lt;a href=&quot;#BPMN-Task&quot; c
      
    
    </summary>
    
    
      <category term="bpmn" scheme="https://pickonefish.github.io/tags/bpmn/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes | Install</title>
    <link href="https://pickonefish.github.io/kubernetes-install/"/>
    <id>https://pickonefish.github.io/kubernetes-install/</id>
    <published>2020-06-20T13:26:35.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Folders"><a href="#Folders" class="headerlink" title="Folders"></a>Folders</h2><p>/etc/kubernetes/</p><h2 id="set-hosts"><a href="#set-hosts" class="headerlink" title="set hosts"></a>set hosts</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ nano /etc/hosts</span><br><span class="line"></span><br><span class="line">192.168.1.58 master-node</span><br><span class="line">192.168.1.59 node-1 worker-node-1</span><br><span class="line">192.168.1.60 node-2 worker-node-2</span><br></pre></td></tr></table></figure><h2 id="Uninstall-Older-Version"><a href="#Uninstall-Older-Version" class="headerlink" title="Uninstall Older Version"></a>Uninstall Older Version</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum  -y remove  docker-common docker container-selinux docker-selinux docker-engine</span><br></pre></td></tr></table></figure><h2 id="Install-Dependent-Packages"><a href="#Install-Dependent-Packages" class="headerlink" title="Install Dependent Packages"></a>Install Dependent Packages</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install lvm2 device-mapper device-mapper-persistent-data device-mapper-event device-mapper-libs device-mapper-event-libs</span><br></pre></td></tr></table></figure><h2 id="Add-Docker-Repository"><a href="#Add-Docker-Repository" class="headerlink" title="Add Docker Repository"></a>Add Docker Repository</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="Install-Docker"><a href="#Install-Docker" class="headerlink" title="Install Docker"></a>Install Docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install docker-ce --nobest</span><br></pre></td></tr></table></figure><h2 id="start-the-Docker-service"><a href="#start-the-Docker-service" class="headerlink" title="start the Docker service"></a>start the Docker service</h2><p>Now you have Docker installed onto your machine, start the Docker service in case if it is not started automatically after the installation</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl start docker</span><br><span class="line"></span><br><span class="line">$ systemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="Check-the-Docker-service"><a href="#Check-the-Docker-service" class="headerlink" title="Check the Docker service."></a>Check the Docker service.</h2><p>Check the Docker service.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl status docker</span><br></pre></td></tr></table></figure><h2 id="add-user-for-kube"><a href="#add-user-for-kube" class="headerlink" title="add user for kube"></a>add user for kube</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adduser kube --shell /bin/bash</span><br><span class="line">$ passwd kube</span><br></pre></td></tr></table></figure><h2 id="disable-firewall"><a href="#disable-firewall" class="headerlink" title="disable firewall"></a>disable firewall</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop firewalld &amp; systemctl disable firewalld</span><br></pre></td></tr></table></figure><h2 id="開始佈署叢集前確保關閉-firewall-及-selinux"><a href="#開始佈署叢集前確保關閉-firewall-及-selinux" class="headerlink" title="開始佈署叢集前確保關閉 firewall 及 selinux"></a>開始佈署叢集前確保關閉 firewall 及 selinux</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ setenforce 0</span><br><span class="line"></span><br><span class="line">$ nano /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h1 id="Install-and-Initialize-Kubernetes-on-RedHat-8-CentOS-8"><a href="#Install-and-Initialize-Kubernetes-on-RedHat-8-CentOS-8" class="headerlink" title="Install and Initialize Kubernetes on RedHat 8 (CentOS 8)"></a>Install and Initialize Kubernetes on RedHat 8 (CentOS 8)</h1><h2 id="Add-Kubernetes-Repository"><a href="#Add-Kubernetes-Repository" class="headerlink" title="Add Kubernetes Repository"></a>Add Kubernetes Repository</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/yum.repos.d/kubernetes.repo</span><br><span class="line"></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br></pre></td></tr></table></figure><h2 id="install-the-Kubernetes-and-enable-kubelet"><a href="#install-the-Kubernetes-and-enable-kubelet" class="headerlink" title="install the Kubernetes and enable kubelet"></a>install the Kubernetes and enable kubelet</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ yum list kubectl kubelet kubeadm kubernetes-cni</span><br><span class="line">$ yum install -y kubelet kubeadm kubectl kubernetes-cni --disableexcludes=kubernetes --skip-broken</span><br><span class="line"></span><br><span class="line">$ systemctl enable --now kubelet</span><br></pre></td></tr></table></figure><p>## </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ nano /etc/sysctl.d/k8s.conf</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line"></span><br><span class="line">$ sysctl --system</span><br></pre></td></tr></table></figure><p>## </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ swapoff -a</span><br><span class="line"></span><br><span class="line">$ nano /etc/fstab</span><br><span class="line"></span><br><span class="line"># /dev/mapper/cl-swap</span><br></pre></td></tr></table></figure><p>@master node<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.1.58 --kubernetes-version stable-1.18</span><br><span class="line"></span><br><span class="line">$ cd ~</span><br><span class="line">$ mkdir .kube</span><br><span class="line">$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">$ sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure></p><h1 id="print-join-command"><a href="#print-join-command" class="headerlink" title="print join command"></a>print join command</h1><p>@master node<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm token create --print-join-command</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.1.58:6443 --token kc62m0.h380cthvmsqz9lxm     --discovery-token-ca-cert-hash sha256:0434eb6ff6fd4a88682f40c135ba3572c34a39246fae0087512739a6f87c2e4e</span><br></pre></td></tr></table></figure></p><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull quay.io/coreos/flannel:v0.12.0-amd64</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.12.0/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h1 id="Install-Cluster-Networking-—-Overlay-Network"><a href="#Install-Cluster-Networking-—-Overlay-Network" class="headerlink" title="Install Cluster Networking — Overlay Network"></a>Install Cluster Networking — Overlay Network</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h1 id="Drain-Pod-Hosts-—-Delete-Nodes"><a href="#Drain-Pod-Hosts-—-Delete-Nodes" class="headerlink" title="Drain Pod Hosts — Delete Nodes"></a>Drain Pod Hosts — Delete Nodes</h1><p>You might encounter some situation for some reason, you want to tear down your worker nodes. Please use the following command on master node to drain your worker nodes first.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl drain &lt;node name&gt; --delete-local-data --force --ignore-daemonsets</span><br><span class="line">$ kubectl delete node &lt;node name&gt;</span><br></pre></td></tr></table></figure></p><p>Then, on the worker node being removed, reset all kubeadm installed state and please don’t forget reset your iptables as well.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm reset</span><br><span class="line">$ iptables -F &amp;&amp; iptables -t nat -F &amp;&amp; iptables -t mangle -F &amp;&amp; iptables -X</span><br></pre></td></tr></table></figure><h1 id="Enable-kubectl-autocompletion"><a href="#Enable-kubectl-autocompletion" class="headerlink" title="Enable kubectl autocompletion"></a>Enable kubectl autocompletion</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install bash-completion</span><br><span class="line">$ echo &apos;source &lt;(kubectl completion bash)&apos; &gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure><h1 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h1><h2 id="kube-proxy-config-遺失"><a href="#kube-proxy-config-遺失" class="headerlink" title="kube-proxy config 遺失"></a>kube-proxy config 遺失</h2><p>沒有 /var/lib/kube-proxy/config.conf</p><h1 id="CheatSheet"><a href="#CheatSheet" class="headerlink" title="CheatSheet"></a>CheatSheet</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl get cs</span><br><span class="line">kubectl get noodes</span><br><span class="line">kubectl get pods --all-namespace</span><br><span class="line">kubectl get svc</span><br><span class="line">kubectl -n kubernetes-dashboard get secret</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://medium.com/@liau.weijie/how-to-install-docker-and-kubernetes-cluster-on-redhat-8-centos-8-f774fc071e82" target="_blank" rel="noopener">https://medium.com/@liau.weijie/how-to-install-docker-and-kubernetes-cluster-on-redhat-8-centos-8-f774fc071e82</a></li><li><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/#enable-kubectl-autocompletion" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/tools/install-kubectl/#enable-kubectl-autocompletion</a></li><li><a href="https://kubernetes.feisky.xyz/introduction/101" target="_blank" rel="noopener">https://kubernetes.feisky.xyz/introduction/101</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Folders&quot;&gt;&lt;a href=&quot;#Folders&quot; class=&quot;headerlink&quot; title=&quot;Folders&quot;&gt;&lt;/a&gt;Folders&lt;/h2&gt;&lt;p&gt;/etc/kubernetes/&lt;/p&gt;
&lt;h2 id=&quot;set-hosts&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pickonefish.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>ANGULAR | akveo/nebular 系列 - 6.7. Google OAuth 2.0 配置 | 中文</title>
    <link href="https://pickonefish.github.io/auth-oauth2/"/>
    <id>https://pickonefish.github.io/auth-oauth2/</id>
    <published>2018-08-04T15:54:35.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/configuring-google-oauth2#strategy" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/configuring-google-oauth2#strategy</a></p><h1 id="認證策略"><a href="#認證策略" class="headerlink" title="認證策略"></a>認證策略</h1><p>使用 <code>NbOAuth2AuthStrategy</code> 給予配置第三方認證提供者認證的可能性，像是 Google、Facebook 等。<br>不需要任何後端的實作像是 <a href="https://tools.ietf.org/html/rfc6749" target="_blank" rel="noopener">OAuth2</a> 協定，實現完全無伺服器的認證流程作為選項之一。</p><p>這篇文章我們將以 <a href="https://tools.ietf.org/html/rfc6749#section-4.2" target="_blank" rel="noopener">Implicit</a> flow 為基礎的 <a href="https://developers.google.com/identity/protocols/OAuth2UserAgent" target="_blank" rel="noopener">Google 認證</a> 設定與配置 <code>NbOAuth2AuthStrategy</code> 。</p><hr><h2 id="第一步驟：-獲得金鑰"><a href="#第一步驟：-獲得金鑰" class="headerlink" title="第一步驟： 獲得金鑰"></a>第一步驟： 獲得金鑰</h2><p>第一步驟我們需要設定一個應用程式並取得它在認證伺服器（我們的例子使用 Goolge 作為認證伺服器）上的金鑰。<br>更多細節可以參考 <a href="https://developers.google.com/identity/protocols/OAuth2UserAgent#enable-apis" target="_blank" rel="noopener">為您的專案啟用 Google API</a> 網頁。<br>我們不會複製該篇文章在這邊，但一個結果您必須要有 <code>client_id</code> － 唯一應用程式識別碼。</p><hr><h2 id="Step-2-啟用策略"><a href="#Step-2-啟用策略" class="headerlink" title="Step 2. 啟用策略"></a>Step 2. 啟用策略</h2><p>下一步可以註冊 <code>NbOAuth2AuthStrategy</code> 到您的 <code>app.module.ts</code> :</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    NbAuthModule.forRoot(&#123;</span><br><span class="line">      strategies: [</span><br><span class="line">        NbOAuth2AuthStrategy.setup(&#123;</span><br><span class="line">          name: <span class="string">'google'</span>,</span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">        &#125;),</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> YourModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們匯入 <code>NbAuthModule</code> 並提供我們想用的策略。如果您已經有一些策略的設定，別擔心，您只要加入一個新的到 <code>策略</code> 陣列中。<br>我們將它命名為 <code>google</code> ，之後我們將使用這個暱稱來呼叫這個策略。</p><hr><h2 id="Step-3-配置設定"><a href="#Step-3-配置設定" class="headerlink" title="Step 3. 配置設定"></a>Step 3. 配置設定</h2><p>讓我們填寫一些設定在我們的策略上。 我們加入從第一步驟中獲得的 <code>client_id</code> 。在這個認證流程我們不需要 client_secret ，所以我們留白。<br>然後我們設定 <code>authorize</code> endpoint、response_type （我們的例子是 <code>token</code> ）以及這個認證的 <a href="https://tools.ietf.org/html/rfc6749#section-3.3" target="_blank" rel="noopener">scope</a>：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    NbAuthModule.forRoot(&#123;</span><br><span class="line">      strategies: [</span><br><span class="line">        NbOAuth2AuthStrategy.setup(&#123;</span><br><span class="line">          name: <span class="string">'google'</span>,</span><br><span class="line">          clientId: <span class="string">'YOUR_CLIENT_ID'</span>,</span><br><span class="line">          clientSecret: <span class="string">''</span>,</span><br><span class="line">          authorize: &#123;</span><br><span class="line">            endpoint: <span class="string">'https://accounts.google.com/o/oauth2/v2/auth'</span>,</span><br><span class="line">            responseType: NbOAuth2ResponseType.TOKEN,</span><br><span class="line">            scope: <span class="string">'https://www.googleapis.com/auth/userinfo.profile'</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> YourModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Step-4-路由"><a href="#Step-4-路由" class="headerlink" title="Step 4. 路由"></a>Step 4. 路由</h2><p>我至少須要兩個路由能夠組織 OAuth2 流程。第一個，登入路由，我們可以先簡單有一個按鈕以初始認證程序。第二個，callback 路由，我們需要處理 OAuth2 伺服器的回應。<br>讓我們加入這兩者到我們的路由並參考到一些空元件：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">RouterModule.forChild([</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">''</span>,</span><br><span class="line">    component: NbOAuth2LoginComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'callback'</span>,</span><br><span class="line">    component: NbOAuth2CallbackComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">]),</span><br></pre></td></tr></table></figure><hr><h2 id="Step-5-重新導向-URI"><a href="#Step-5-重新導向-URI" class="headerlink" title="Step 5. 重新導向 URI"></a>Step 5. 重新導向 URI</h2><p>最後一個配置是設定 <code>redirect_uri</code> 參數。確認您已經依據<a href="https://developers.google.com/identity/protocols/OAuth2UserAgent#redirecting" target="_blank" rel="noopener">文件</a>加入這個 URL 到 Google Console。</p><p>Now let’s complete the setup:<br><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    NbAuthModule.forRoot(&#123;</span><br><span class="line">      strategies: [</span><br><span class="line">        NbOAuth2AuthStrategy.setup(&#123;</span><br><span class="line">          name: <span class="string">'google'</span>,</span><br><span class="line">          clientId: <span class="string">'YOUR_CLIENT_ID'</span>,</span><br><span class="line">          clientSecret: <span class="string">''</span>,</span><br><span class="line">          authorize: &#123;</span><br><span class="line">            endpoint: <span class="string">'https://accounts.google.com/o/oauth2/v2/auth'</span>,</span><br><span class="line">            responseType: NbOAuth2ResponseType.TOKEN,</span><br><span class="line">            scope: <span class="string">'https://www.googleapis.com/auth/userinfo.profile'</span>,</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            redirectUri: <span class="string">'http://localhost:4100/example/oauth2/callback'</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> YourModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="Step-6-完整您的元件"><a href="#Step-6-完整您的元件" class="headerlink" title="Step 6. 完整您的元件"></a>Step 6. 完整您的元件</h2><p>最後，我們加入程式碼到我們的元件以初始認證。首先是 <code>NbOAuth2LoginComponent</code> 元件：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'nb-oauth2-login'</span>,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;button class="btn btn-success" *ngIf="!token" (click)="login()"&gt;Sign In with Google&lt;/button&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> NbOAuth2LoginComponent <span class="keyword">implements</span> OnDestroy &#123;</span><br><span class="line"></span><br><span class="line">  alive = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  login() &#123;</span><br><span class="line">    <span class="keyword">this</span>.authService.authenticate(<span class="string">'google'</span>)</span><br><span class="line">      .pipe(takeWhile(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.alive))</span><br><span class="line">      .subscribe(<span class="function">(<span class="params">authResult: NbAuthResult</span>) =&gt;</span> &#123;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnDestroy(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.alive = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這程式碼非常簡單 - 我們呼叫 <code>NbAuthService</code>.<code>authenticate</code> 方法並傳入我們的策略暱稱 - <code>google</code> 以訂閱結果。<br>這將準備 <code>授權</code> 請求 url 並重新導向我們到 Google 認證伺服器。</p><p>現在，我們須要配置 “callback” URL 以能夠正確處理回應：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'nb-playground-oauth2-callback'</span>,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;nb-layout&gt;</span></span><br><span class="line"><span class="string">      &lt;nb-layout-column&gt;Authenticating...&lt;/nb-layout-column&gt;</span></span><br><span class="line"><span class="string">    &lt;/nb-layout&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> NbOAuth2CallbackPlaygroundComponent <span class="keyword">implements</span> OnDestroy &#123;</span><br><span class="line"></span><br><span class="line">  alive = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService, <span class="keyword">private</span> router: Router</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.authService.authenticate(<span class="string">'google'</span>)</span><br><span class="line">      .pipe(takeWhile(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.alive))</span><br><span class="line">      .subscribe(<span class="function">(<span class="params">authResult: NbAuthResult</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (authResult.isSuccess()) &#123;</span><br><span class="line">          <span class="keyword">this</span>.router.navigateByUrl(<span class="string">'/pages/dashboard'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnDestroy(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.alive = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這裡我們呼叫同一個 <code>authenticate</code> 方法，將決定我們處於 <code>redirect</code> 狀態，處理回應；儲存您的通行證並且重新導向您回到您的應用程式。</p><hr><h2 id="範例完成"><a href="#範例完成" class="headerlink" title="範例完成"></a>範例完成</h2><p>完整的程式碼範例可以在 <a href="https://github.com/akveo/nebular/tree/master/src/playground/oauth2" target="_blank" rel="noopener">GitHub</a> 上找到。<br>這裡有練習場可以使用 <a href="https://akveo.github.io/nebular/example/oauth2" target="_blank" rel="noopener">OAuth2 Nebular 範例</a> 試玩看看。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/auth-token">接收認證後的使用者通行證</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nbauthservice" target="_blank" rel="noopener">NbAuthService</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nbtokenservice" target="_blank" rel="noopener">NbTokenService</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nboauth2authstrategy" target="_blank" rel="noopener">NbOAuth2AuthStrategy</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文：&lt;a href=&quot;https://akveo.github.io/nebular/docs/auth/configuring-google-oauth2#strategy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://akveo.gi
      
    
    </summary>
    
    
      <category term="angular" scheme="https://pickonefish.github.io/tags/angular/"/>
    
      <category term="akveo/nebular" scheme="https://pickonefish.github.io/tags/akveo-nebular/"/>
    
      <category term="ngx-admin" scheme="https://pickonefish.github.io/tags/ngx-admin/"/>
    
      <category term="auth" scheme="https://pickonefish.github.io/tags/auth/"/>
    
      <category term="oauth" scheme="https://pickonefish.github.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>ANGULAR | akveo/nebular 系列 - 6.6. 以使用者認證保護應用程式 | 中文</title>
    <link href="https://pickonefish.github.io/auth-guard/"/>
    <id>https://pickonefish.github.io/auth-guard/</id>
    <published>2018-08-03T13:26:35.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/protecting-application-routes#protecting-application-based-on-user-authentication" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/protecting-application-routes#protecting-application-based-on-user-authentication</a></p><h1 id="以使用者認證保護應用程式"><a href="#以使用者認證保護應用程式" class="headerlink" title="以使用者認證保護應用程式"></a>以使用者認證保護應用程式</h1><p>根據以下應用程式結構：</p><ul><li><code>/pages/*</code> - 保護區僅適用於已認證之使用者</li><li><code>/auth/*</code> - 認證區 (登入、註冊等 …) 適用於未認證之使用者</li></ul><p>Angular 提供一個容易的方法保護你的路由，稱之為 <a href="https://angular.io/guide/router#guard-the-admin-feature" target="_blank" rel="noopener">Router Guard</a>.<br>以下我們展示如何整合 Nebular 認證保護 <code>/pages/*</code> (保護區)</p><hr><h2 id="建立認證守衛-AuthGuard"><a href="#建立認證守衛-AuthGuard" class="headerlink" title="建立認證守衛 (AuthGuard)"></a>建立認證守衛 (AuthGuard)</h2><p>建立 <code>auth-guard.service.ts</code> 於 <code>app-routing.module.ts</code> 附近，檔案內容像是:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CanActivate &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line"></span><br><span class="line">  canActivate() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="完成-canActivate-方法"><a href="#完成-canActivate-方法" class="headerlink" title="完成 canActivate 方法"></a>完成 canActivate 方法</h2><p>然後 import <code>NbAuthService</code> 以及完成 the <code>canActivate</code> 方法:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CanActivate &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NbAuthService &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  canActivate() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.authService.isAuthenticated(); <span class="comment">// canActive 可以回傳 Observable&lt;boolean&gt; 正是 isAuhenticated 回傳的內容</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當 isAuthenticated() 的值為 true 時，路由會被啟用，反之亦然。</p><hr><h2 id="註冊-AuthGuard-服務"><a href="#註冊-AuthGuard-服務" class="headerlink" title="註冊 AuthGuard 服務"></a>註冊 AuthGuard 服務</h2><p>我們須要註冊服務 <code>AuthGuard</code> 到 <code>app.module.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; AuthGuard &#125; <span class="keyword">from</span> <span class="string">'../auth-guard.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  ],</span><br><span class="line">  providers: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    AuthGuard</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h2 id="加入守衛-AuthGuard-到路由"><a href="#加入守衛-AuthGuard-到路由" class="headerlink" title="加入守衛 (AuthGuard) 到路由"></a>加入守衛 (AuthGuard) 到路由</h2><p>最後一步 - 將認證守衛 (AuthGuard) 參考到 <code>app-routing.module.ts</code>:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; AuthGuard &#125; <span class="keyword">from</span> <span class="string">'../auth-guard.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  &#123; </span><br><span class="line">    path: <span class="string">'pages'</span>,</span><br><span class="line">    canActivate: [AuthGuard], <span class="comment">// 這裡告訴 Angular 利用『認證守衛』檢查存取權限</span></span><br><span class="line">    loadChildren: <span class="string">'app/pages/pages.module#PagesModule'</span> </span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'auth'</span>,</span><br><span class="line">    component: NbAuthComponent,</span><br><span class="line">    children: [</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>如果你不是一個受認證的使用者，將無法存取 <code>pages/*</code> 的任何位置。</p><hr><h2 id="重新導向未認證之使用者到登入頁"><a href="#重新導向未認證之使用者到登入頁" class="headerlink" title="重新導向未認證之使用者到登入頁"></a>重新導向未認證之使用者到登入頁</h2><p>當使用者訪問受限制的頁面時，你可能希望使用者可以重新導向到 <code>auth/login</code> 頁面，稍微修改反映這個邏輯：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CanActivate, Router &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NbAuthService &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; tap &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators/tap'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService, <span class="keyword">private</span> router: Router</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  canActivate() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.authService.isAuthenticated()</span><br><span class="line">      .pipe(</span><br><span class="line">        tap(<span class="function"><span class="params">authenticated</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (!authenticated) &#123;</span><br><span class="line">            <span class="keyword">this</span>.router.navigate([<span class="string">'auth/login'</span>]);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">      );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們只是檢查 <code>isAuthenticated</code> 返回的值然後簡單的重新導向到登入頁</p><p>很簡單! 希望能對你有幫助。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文：&lt;a href=&quot;https://akveo.github.io/nebular/docs/auth/protecting-application-routes#protecting-application-based-on-user-authentication&quot; 
      
    
    </summary>
    
    
      <category term="angular" scheme="https://pickonefish.github.io/tags/angular/"/>
    
      <category term="akveo/nebular" scheme="https://pickonefish.github.io/tags/akveo-nebular/"/>
    
      <category term="ngx-admin" scheme="https://pickonefish.github.io/tags/ngx-admin/"/>
    
  </entry>
  
  <entry>
    <title>ANGULAR | akveo/nebular 系列 - 6.5. 取得使用者通行證 | 中文</title>
    <link href="https://pickonefish.github.io/auth-token/"/>
    <id>https://pickonefish.github.io/auth-token/</id>
    <published>2018-08-02T02:53:35.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/getting-user-token" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/getting-user-token</a></p><h1 id="取得使用者通行證"><a href="#取得使用者通行證" class="headerlink" title="取得使用者通行證"></a>取得使用者通行證</h1><h2 id="在登入或註冊之後取得使用者通行證"><a href="#在登入或註冊之後取得使用者通行證" class="headerlink" title="在登入或註冊之後取得使用者通行證"></a>在登入或註冊之後取得使用者通行證</h2><p>這一步，我們假設 Nebular 認證模組已經安裝好也可以運行了，您已經成功配置認證策略和根據您的需求調整認證產品外觀。<br>在成功認證後可以取得使用者通行證，有能力與伺服器通訊，例如顯示 username 在應用程式的標頭位置。我們假設您的後端回傳一個 JWT 通行證，所以我們可以使用通行證的「負載資訊 payload」以擷取出使用者的資訊。<br>每一個 <code>策略</code> 都有預設的通行證類別。例如 <code>NbPasswordAuthStrategy</code> 使用 <code>NbAuthSimpleToken</code> ，又例如 <code>NbOAuth2AuthProvider</code> 使用 <code>NbAuthOAuth2Token</code>。如果需要可以指定另一個通行證類別，下方舉例說明。</p><h2 id="配置通行證型態"><a href="#配置通行證型態" class="headerlink" title="配置通行證型態"></a>配置通行證型態</h2><p>讓我們告訴 Nebular 我們正等待 JWT 通行證而不是簡單字串通行證。<br>我們只需要提供相對應的類別即可。打開您的 <code>app.module.ts</code> 並調整您的 <code>策略</code> 配置：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">             </span><br><span class="line">             token: &#123;</span><br><span class="line">               <span class="keyword">class</span>: NbAuthJWTToken,</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>這一行告訴 Angular 注入 <code>NbAuthJWTToken</code> (而不是預設的 <code>NbAuthSimpleToken</code> ) ，它是一個包裝類別，會包裝好從您的 API 服務回應的值。</p><h2 id="配置通行證萃取"><a href="#配置通行證萃取" class="headerlink" title="配置通行證萃取"></a>配置通行證萃取</h2><p>然後，我們配置 <code>NbPasswordAuthStrategy</code> 應該在登入或註冊的回應資料中找到通行證。<br>使用預設的 <code>NbPasswordAuthStrategy</code> 預期您的通行證是位於以 JSON 格式回應的 <code>data.token</code> 鍵之下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    token: 'some-jwt-token'</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們假設我們 API 只回應一個通行證像是 <code>{ token: &#39;some-jwt-token&#39; }</code> 沒有包裝您的回應在 <code>data</code> 屬性中，讓我們告訴 Nebular：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">             </span><br><span class="line">             token: &#123;</span><br><span class="line">               <span class="keyword">class</span>: NbAuthJWTToken,</span><br><span class="line">              </span><br><span class="line">               key: <span class="string">'token'</span>, <span class="comment">// 這個參數告知從哪裡查到通行證的值</span></span><br><span class="line">             &#125;</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用通行證"><a href="#使用通行證" class="headerlink" title="使用通行證"></a>使用通行證</h2><p>好的，讓我們使用通行證擷取負載資訊並顯示 username 在標頭中。打開您的 <code>header.component.ts</code> 並 import 以下服務：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NbAuthJWTToken, NbAuthService &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br></pre></td></tr></table></figure><p>然後我們建立 <code>user</code> 變數，將通行證中負載資訊儲存在元件中： </p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HeaderComponent &#123;</span><br><span class="line"></span><br><span class="line">  user = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後我們注入 <code>NbAuthService</code> 並且訂閱一個 <code>onTokenChange</code> 方法，在每次通行證更新時它會推送一個事件，所以標頭元件不須要額外地刷新或請求資料即可跟上來自後端的最新資訊：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HeaderComponent &#123;</span><br><span class="line"></span><br><span class="line">  user = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.authService.onTokenChange()</span><br><span class="line">      .subscribe(<span class="function">(<span class="params">token: NbAuthJWTToken</span>) =&gt;</span> &#123;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> (token.isValid()) &#123;</span><br><span class="line">          <span class="keyword">this</span>.user = token.getPayload(); <span class="comment">// 這裡我們取得來自通行證地負載資訊並且分配給 `user` 變數。</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後，我們把 <code>user</code> 變數放置在 template 中以顯示使用者的資訊。<br>在這裡， <code>nb-user</code> 元件是一個非常適合的元件：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;nb-layout-header fixed&gt;</span></span><br><span class="line"><span class="string">      &lt;nb-user [name]="user?.name" [picture]="user?.picture"&gt;&lt;/nb-user&gt;</span></span><br><span class="line"><span class="string">    &lt;/nb-layout-header&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HeaderComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>我們假設可以從負載資訊中擷取 name 和 picture 屬性</em></p><p>完成！相對來說您可以注入 <code>NbAuthService</code> 在任何元件中，以管理您在應用程式中認證的狀態。</p><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="https://akveo.github.io/nebular/docs/auth/nbauthservice" target="_blank" rel="noopener">NbAuthService</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nbtokenservice" target="_blank" rel="noopener">NbTokenService</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文：&lt;a href=&quot;https://akveo.github.io/nebular/docs/auth/getting-user-token&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://akveo.github.io/nebular/
      
    
    </summary>
    
    
      <category term="angular" scheme="https://pickonefish.github.io/tags/angular/"/>
    
      <category term="akveo/nebular" scheme="https://pickonefish.github.io/tags/akveo-nebular/"/>
    
      <category term="ngx-admin" scheme="https://pickonefish.github.io/tags/ngx-admin/"/>
    
      <category term="auth" scheme="https://pickonefish.github.io/tags/auth/"/>
    
      <category term="token" scheme="https://pickonefish.github.io/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>ANGULAR | akveo/nebular 系列 - 6.4. 認證 UI 元件 | 中文</title>
    <link href="https://pickonefish.github.io/auth-ui/"/>
    <id>https://pickonefish.github.io/auth-ui/</id>
    <published>2018-08-02T02:53:35.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/configuring-ui" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/configuring-ui</a></p><h1 id="認證-UI-元件"><a href="#認證-UI-元件" class="headerlink" title="認證 UI 元件"></a>認證 UI 元件</h1><p>認證模組由這些認證元件組成：</p><ul><li><code>&lt;nb-auth-block&gt;&lt;/nb-auth-block&gt;</code> - 元件包裝，為已經包含在這個元件內的 Form 提供基礎的樣式</li><li><code>&lt;nb-register&gt;&lt;/nb-register&gt;</code> - 註冊頁</li><li><code>&lt;nb-login&gt;&lt;/nb-login&gt;</code> - 登入頁</li><li><code>&lt;nb-logout&gt;&lt;/nb-logout&gt;</code> - 登出頁 - 當送出登出請求時，顯示 “登出中…” 訊息</li><li><code>&lt;nb-request-password&gt;&lt;/nb-request-password&gt;</code> - 要求密碼頁</li><li><code>&lt;nb-reset-password&gt;&lt;/nb-reset-password&gt;</code> - 重置密碼頁<hr></li></ul><h2 id="UI-設定"><a href="#UI-設定" class="headerlink" title="UI 設定"></a>UI 設定</h2><p><code>AuthModule</code> 除了接受「策略」的配置也接受 UI 的設定，在 <code>forms</code> 鍵下：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>你可以為每個表單單獨配置，以下是預設值：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> NbAuthSocialLink &#123;</span><br><span class="line">  link?: <span class="built_in">string</span>,</span><br><span class="line">  url?: <span class="built_in">string</span>,</span><br><span class="line">  target?: <span class="built_in">string</span>,</span><br><span class="line">  title?: <span class="built_in">string</span>,</span><br><span class="line">  icon?: <span class="built_in">string</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> socialLinks: NbAuthSocialLink[] = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> defaultSettings: <span class="built_in">any</span> = &#123;</span><br><span class="line">  forms: &#123;</span><br><span class="line">    login: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>, <span class="comment">// 要顯示成功訊息給使用者時，在成功登入後，重新導向前給予延遲時間。</span></span><br><span class="line">      strategy: <span class="string">'email'</span>,  <span class="comment">// 策略 id 鍵.</span></span><br><span class="line">      rememberMe: <span class="literal">true</span>,   <span class="comment">// 是否顯示 `記住我` 之 Checkbox</span></span><br><span class="line">      showMessages: &#123;     <span class="comment">// 是否顯示成功/錯誤訊息</span></span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      socialLinks: socialLinks, <span class="comment">// 顯示社群連結在頁面下方</span></span><br><span class="line">    &#125;,</span><br><span class="line">    register: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">      showMessages: &#123;</span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      terms: <span class="literal">true</span>,</span><br><span class="line">      socialLinks: socialLinks,</span><br><span class="line">    &#125;,</span><br><span class="line">    requestPassword: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">      showMessages: &#123;</span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      socialLinks: socialLinks,</span><br><span class="line">    &#125;,</span><br><span class="line">    resetPassword: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">      showMessages: &#123;</span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      socialLinks: socialLinks,</span><br><span class="line">    &#125;,</span><br><span class="line">    logout: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    validation: &#123;</span><br><span class="line">      password: &#123;</span><br><span class="line">        required: <span class="literal">true</span>,</span><br><span class="line">        minLength: <span class="number">4</span>,</span><br><span class="line">        maxLength: <span class="number">50</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      email: &#123;</span><br><span class="line">        required: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      fullName: &#123;</span><br><span class="line">        required: <span class="literal">false</span>,</span><br><span class="line">        minLength: <span class="number">4</span>,</span><br><span class="line">        maxLength: <span class="number">50</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="刪除重新導向的延遲時間"><a href="#刪除重新導向的延遲時間" class="headerlink" title="刪除重新導向的延遲時間"></a>刪除重新導向的延遲時間</h2><p>如果要刪除重新導向的延遲時間以及不再使用成功訊息時，可以參考以下範例：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;</span><br><span class="line">           login: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           register: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           requestPassword: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           resetPassword: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           logout: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果看起來有點冗長，可以移動重複的部分到一個變數中像是：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> formSetting: <span class="built_in">any</span> = &#123;</span><br><span class="line">  redirectDelay: <span class="number">0</span>,</span><br><span class="line">  showMessages: &#123;</span><br><span class="line">    success: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;</span><br><span class="line">           login: formSetting,</span><br><span class="line">           register: formSetting,</span><br><span class="line">           requestPassword: formSetting,</span><br><span class="line">           resetPassword: formSetting,</span><br><span class="line">           logout: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>這個設定將與預設值合併，所以不須要特別輸入所有的鍵值到這裡。</p><hr><h2 id="客製化-UI-元件"><a href="#客製化-UI-元件" class="headerlink" title="客製化 UI 元件"></a>客製化 UI 元件</h2><p>案例中，當 Nebular 認證元件的產品外觀無法滿足您的需求時，您可以簡單地以 Nebular 所提供地認證元件為基礎建立客製化認證元件。</p><p>您需要做地就是：</p><h3 id="複製元件原始碼"><a href="#複製元件原始碼" class="headerlink" title="複製元件原始碼"></a>複製元件原始碼</h3><p>複製您想要變更在您專案的元件 <a href="https://github.com/akveo/nebular/tree/master/src/framework/auth/components" target="_blank" rel="noopener">原始碼</a>。如果您使用 <code>ngx-admin</code>，您可以放置於 <code>src/app/@theme/components/auth</code>。重新命名元件以確認您的應用程式前綴，例如使用 <code>ngx-</code> 作為前綴。</p><blockquote><p><strong>不用複製其他認證模組的檔案</strong><br>不須要複製服務以及其他檔案，否則會與原生的 Nebular 認證模組發生衝突。</p></blockquote><blockquote><p><strong>重新命名</strong><br>確認以重新命名元件類別的名稱以及根據應用程式的 prefix 重新命名 selectors。您可以使用您編輯器的 <code>重構 Refactor</code> 功能。</p></blockquote><h3 id="註冊元件"><a href="#註冊元件" class="headerlink" title="註冊元件"></a>註冊元件</h3><p>註冊主題到您的 <code>*.module.ts</code> (例如 <code>theme.module.ts</code>):</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// make sure the path is correct for your setup</span></span><br><span class="line"><span class="keyword">import</span> &#123; NgxAuthComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxAuthBlockComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth-block/auth-block.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLoginComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/login/login.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRegisterComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/register/register.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLogoutComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/logout/logout.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRequestPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/request-password/request-password.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxResetPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/reset-password/reset-password.component'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [...],</span><br><span class="line">  declarations: [</span><br><span class="line">  </span><br><span class="line">      ...</span><br><span class="line">       </span><br><span class="line">      NgxAuthComponent,</span><br><span class="line">      NgxAuthBlockComponent,</span><br><span class="line">      NgxLoginComponent,</span><br><span class="line">      NgxRegisterComponent,</span><br><span class="line">      NgxRequestPasswordComponent,</span><br><span class="line">      NgxResetPasswordComponent,</span><br><span class="line">      NgxLogoutComponent,</span><br><span class="line">    ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> ThemeModule &#123;</span><br></pre></td></tr></table></figure><p><em>在這個例子我們決定複製所有認證元件徹底重作 UI。</em></p><h3 id="更新路由"><a href="#更新路由" class="headerlink" title="更新路由"></a>更新路由</h3><p>import 新的元件以更新您的路由：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NgxAuthComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxAuthBlockComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth-block/auth-block.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLoginComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/login/login.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRegisterComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/register/register.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLogoutComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/logout/logout.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRequestPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/request-password/request-password.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxResetPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/reset-password/reset-password.component'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'auth'</span>,</span><br><span class="line">    component: NgxAuthComponent,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        component: NgxLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'login'</span>,</span><br><span class="line">        component: NgxLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'register'</span>,</span><br><span class="line">        component: NgxRegisterComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'logout'</span>,</span><br><span class="line">        component: NgxLogoutComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'request-password'</span>,</span><br><span class="line">        component: NgxRequestPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'reset-password'</span>,</span><br><span class="line">        component: NgxResetPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>現在您可以根據您的須要調整元件。請確保與 NbAuthService 相關的邏輯保持不變，使這些元件仍然可以與認證策略通信。</p><hr><h2 id="下一站"><a href="#下一站" class="headerlink" title="下一站"></a>下一站</h2><ul><li><a href="/auth-token">接收認證後的使用者通行證</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文：&lt;a href=&quot;https://akveo.github.io/nebular/docs/auth/configuring-ui&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://akveo.github.io/nebular/docs
      
    
    </summary>
    
    
      <category term="angular" scheme="https://pickonefish.github.io/tags/angular/"/>
    
      <category term="akveo/nebular" scheme="https://pickonefish.github.io/tags/akveo-nebular/"/>
    
      <category term="ngx-admin" scheme="https://pickonefish.github.io/tags/ngx-admin/"/>
    
      <category term="auth" scheme="https://pickonefish.github.io/tags/auth/"/>
    
      <category term="ui" scheme="https://pickonefish.github.io/tags/ui/"/>
    
  </entry>
  
  <entry>
    <title>ANGULAR | akveo/nebular 系列 - 6.3. 配置認證策略 | 中文</title>
    <link href="https://pickonefish.github.io/auth-strategy/"/>
    <id>https://pickonefish.github.io/auth-strategy/</id>
    <published>2018-08-02T01:53:35.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/configuring-a-strategy#strategy" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/configuring-a-strategy#strategy</a></p><h1 id="認證策略"><a href="#認證策略" class="headerlink" title="認證策略"></a>認證策略</h1><p>在 Nebular 中的詞彙 <code>認證策略 Auth Strategy</code> 是一個為一些特定的認證流程（像是 email/password、OAuth2 等流程）依認證邏輯而設計的類別。<br>它接受使用者的輸入（login/email/password/token 等…)，將輸入傳遞給後端 API 並將輸出結果提供給認證 UI 層。<br>目前，有兩個認證策略可用：</p><ul><li><code>NbDummyAuthStrategy</code> - 為了測試目的的簡單策略，當 API 還在開發階段時可以用於模擬後端的回應。</li><li><code>NbPasswordAuthStrategy</code> - 最常見的 email/login/password 認證策略。</li></ul><p>每一個策略有一個擁有預設值的配置清單可用，但你可以根據自己的需求調整配置。</p><hr><h2 id="認證策略配置"><a href="#認證策略配置" class="headerlink" title="認證策略配置"></a>認證策略配置</h2><p>一個例子，讓我們為 <code>NbPasswordAuthStrategy</code> 配置 API 端口。這個策略是被預設配置的，如果您需要任何客製化的做法，請參閱 <a href="https://akveo.github.io/nebular/docs/auth/nbpasswordauthstrategy#nbpasswordauthstrategy" target="_blank" rel="noopener">預設配置的設定值</a> 。<br>我們假設您已經安裝「認證模組」在您的 <code>*.module.ts</code> 檔案:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>email</code> 這是我們分配給「策略」的別名，以便我們以後可以動態的提到它。這也允許我們在一個應用程式中配置多個策略。</p><hr><h2 id="設定-API-配置"><a href="#設定-API-配置" class="headerlink" title="設定 API 配置"></a>設定 API 配置</h2><p>現在我們加入一個 API 端口。根據 <a href="https://akveo.github.io/nebular/docs/auth/nbpasswordauthstrategy#nbpasswordauthstrategy" target="_blank" rel="noopener">NbPasswordAuthStrategy documentation</a>，每一個 function （登入/註冊等…）我們有一個 <code>baseEndpoint</code> 設定以及一個 <code>endpoint</code> 設定：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">            </span><br><span class="line">             baseEndpoint: <span class="string">''</span>,</span><br><span class="line">              login: &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">                endpoint: <span class="string">'/api/auth/login'</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">              register: &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">                endpoint: <span class="string">'/api/auth/register'</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>假設我們的 API 位於獨立的伺服器上 <code>http://example.com/app-api/v1</code> 於是修改 <code>baseEndpoint</code> ：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="comment">// ...</span></span><br><span class="line"> baseEndpoint: <span class="string">'http://example.com/app-api/v1'</span>,</span><br><span class="line"> <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且配置其端口，請考慮到最終端口將包含 <code>baseEndpoint + method.endpoint</code>:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  baseEndpoint: <span class="string">'http://example.com/app-api/v1'</span>,</span><br><span class="line">  login: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-in'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  register: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-up'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  logout: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-out'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  requestPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/request-pass'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  resetPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/reset-pass'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後，我們假設與預設策略不同，我們的 API 僅接受 <code>HTTP POST</code>，所我們加上 <code>method</code> 解決這個問題：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  baseEndpoint: <span class="string">'http://example.com/app-api/v1'</span>,</span><br><span class="line">  login: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-in'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  register: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-up'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  logout: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-out'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  requestPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/request-pass'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  resetPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/reset-pass'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong><br>不須要在此列出所有的配置。您的設定將相對應地與預設策略的設定合併。</p></blockquote><p>太好了！經過這些簡單的步驟，您針對 API 後端正確地配置身份認證層。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/auth-ui">調整認證元件 UI</a></li><li><a href="/auth-token">接收認證後的使用者通行證</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文：&lt;a href=&quot;https://akveo.github.io/nebular/docs/auth/configuring-a-strategy#strategy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://akveo.githu
      
    
    </summary>
    
    
      <category term="angular" scheme="https://pickonefish.github.io/tags/angular/"/>
    
      <category term="akveo/nebular" scheme="https://pickonefish.github.io/tags/akveo-nebular/"/>
    
      <category term="ngx-admin" scheme="https://pickonefish.github.io/tags/ngx-admin/"/>
    
      <category term="auth" scheme="https://pickonefish.github.io/tags/auth/"/>
    
      <category term="oauth" scheme="https://pickonefish.github.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>ANGULAR | akveo/nebular 系列 - 6.2. 安裝安全延伸模組 | 中文</title>
    <link href="https://pickonefish.github.io/auth-install/"/>
    <id>https://pickonefish.github.io/auth-install/</id>
    <published>2018-08-02T01:08:25.000Z</published>
    <updated>2021-11-04T13:10:11.642Z</updated>
    
    <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/installation" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/installation</a></p><h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><blockquote><p>注意<br>如果您使用我們的 <a href="/install-starter-kit">ngx-admin 入門套件</a>) 那麼您已經有認證模組了。</p></blockquote><h2 id="安裝模組"><a href="#安裝模組" class="headerlink" title="安裝模組"></a>安裝模組</h2><p>首先，我們可以從 npm 安裝這個模組，並且確認您有 <a href="/install-into-existing">安裝 Nebular 主題模組</a>。<br>Nebular 主題是內建認證元件的需求。如果您不想使用內建認證元件，可以只使用 <code>認證模組</code>，而不需要使用 <code>Nebular 主題</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @nebular/auth</span><br></pre></td></tr></table></figure><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用 NbAuthModule 模組以及 <code>NbPasswordAuthStrategy</code> 策略類別:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NbPasswordAuthStrategy, NbAuthModule &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="配置策略類別"><a href="#配置策略類別" class="headerlink" title="配置策略類別"></a>配置策略類別</h2><p>現在讓我們利用特定的「策略（strategy）」配置這個模組，這個例子我們加入 <code>NbPasswordAuthStrategy</code>。<br>我們須要透過呼叫靜態方法 <code>setup</code> 以傳入一個 <strong>選項清單</strong> 以加入一個策略：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我們也規定 <code>forms</code> 鍵（key），以為認證元件配置可用的選項。<br>我們現在先留白，詳細請參考 <a href="/auth-ui">配置認證 UI 元件</a> 文章。</p><hr><h2 id="啟用-Auth-元件"><a href="#啟用-Auth-元件" class="headerlink" title="啟用 Auth 元件"></a>啟用 Auth 元件</h2><p>下一步我們須要配置認證元件的路由，讓我們加入以下程式碼到您的 <code>app-routing.module.ts</code> 檔案:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  NbAuthComponent,</span><br><span class="line">  NbLoginComponent,</span><br><span class="line">  NbRegisterComponent,</span><br><span class="line">  NbLogoutComponent,</span><br><span class="line">  NbRequestPasswordComponent,</span><br><span class="line">  NbResetPasswordComponent,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'auth'</span>,</span><br><span class="line">    component: NbAuthComponent,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        component: NbLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'login'</span>,</span><br><span class="line">        component: NbLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'register'</span>,</span><br><span class="line">        component: NbRegisterComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'logout'</span>,</span><br><span class="line">        component: NbLogoutComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'request-password'</span>,</span><br><span class="line">        component: NbRequestPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'reset-password'</span>,</span><br><span class="line">        component: NbResetPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">];</span><br></pre></td></tr></table></figure><hr><h2 id="啟用樣式"><a href="#啟用樣式" class="headerlink" title="啟用樣式"></a>啟用樣式</h2><p>最後，但不代表最不重要 - 安裝元件樣式到您的 styles.scss (<a href="/enabling-theme-system">更多細節</a>):</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/auth/styles/all'</span>; <span class="comment">// 或是 @import '~@nebular/auth/styles/&#123;theme-name&#125;';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ... </span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">include</span> nb-install() &#123;</span><br><span class="line">  @<span class="keyword">include</span> nb-theme-global();</span><br><span class="line">  @<span class="keyword">include</span> nb-auth-global(); <span class="comment">// 附加安裝 mixin 在 nb-install 裡面</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>此時，您可以打開瀏覽起瀏覽 <a href="http://localhost:4200/#/auth/login" target="_blank" rel="noopener">http://localhost:4200/#/auth/login</a> 即顯示一個登入頁。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/auth-strategy">配置認證策略</a></li><li><a href="/auth-ui">調整認證元件 UI</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文：&lt;a href=&quot;https://akveo.github.io/nebular/docs/auth/installation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://akveo.github.io/nebular/docs/a
      
    
    </summary>
    
    
      <category term="angular" scheme="https://pickonefish.github.io/tags/angular/"/>
    
      <category term="akveo/nebular" scheme="https://pickonefish.github.io/tags/akveo-nebular/"/>
    
      <category term="ngx-admin" scheme="https://pickonefish.github.io/tags/ngx-admin/"/>
    
  </entry>
  
</feed>
