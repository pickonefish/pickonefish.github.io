<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.7. Google OAuth 2.0 配置 | 中文</title>
      <link href="/auth-oauth2/"/>
      <url>/auth-oauth2/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/configuring-google-oauth2#strategy" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/configuring-google-oauth2#strategy</a></p><h1 id="認證策略"><a href="#認證策略" class="headerlink" title="認證策略"></a>認證策略</h1><p>使用 <code>NbOAuth2AuthStrategy</code> 給予配置第三方認證提供者認證的可能性，像是 Google、Facebook 等。<br>不需要任何後端的實作像是 <a href="https://tools.ietf.org/html/rfc6749" target="_blank" rel="noopener">OAuth2</a> 協定，實現完全無伺服器的認證流程作為選項之一。</p><p>這篇文章我們將以 <a href="https://tools.ietf.org/html/rfc6749#section-4.2" target="_blank" rel="noopener">Implicit</a> flow 為基礎的 <a href="https://developers.google.com/identity/protocols/OAuth2UserAgent" target="_blank" rel="noopener">Google 認證</a> 設定與配置 <code>NbOAuth2AuthStrategy</code> 。</p><hr><h2 id="第一步驟：-獲得金鑰"><a href="#第一步驟：-獲得金鑰" class="headerlink" title="第一步驟： 獲得金鑰"></a>第一步驟： 獲得金鑰</h2><p>第一步驟我們需要設定一個應用程式並取得它在認證伺服器（我們的例子使用 Goolge 作為認證伺服器）上的金鑰。<br>更多細節可以參考 <a href="https://developers.google.com/identity/protocols/OAuth2UserAgent#enable-apis" target="_blank" rel="noopener">為您的專案啟用 Google API</a> 網頁。<br>我們不會複製該篇文章在這邊，但一個結果您必須要有 <code>client_id</code> － 唯一應用程式識別碼。</p><hr><h2 id="Step-2-啟用策略"><a href="#Step-2-啟用策略" class="headerlink" title="Step 2. 啟用策略"></a>Step 2. 啟用策略</h2><p>下一步可以註冊 <code>NbOAuth2AuthStrategy</code> 到您的 <code>app.module.ts</code> :</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    NbAuthModule.forRoot(&#123;</span><br><span class="line">      strategies: [</span><br><span class="line">        NbOAuth2AuthStrategy.setup(&#123;</span><br><span class="line">          name: <span class="string">'google'</span>,</span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">        &#125;),</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> YourModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們匯入 <code>NbAuthModule</code> 並提供我們想用的策略。如果您已經有一些策略的設定，別擔心，您只要加入一個新的到 <code>策略</code> 陣列中。<br>我們將它命名為 <code>google</code> ，之後我們將使用這個暱稱來呼叫這個策略。</p><hr><h2 id="Step-3-配置設定"><a href="#Step-3-配置設定" class="headerlink" title="Step 3. 配置設定"></a>Step 3. 配置設定</h2><p>讓我們填寫一些設定在我們的策略上。 我們加入從第一步驟中獲得的 <code>client_id</code> 。在這個認證流程我們不需要 client_secret ，所以我們留白。<br>然後我們設定 <code>authorize</code> endpoint、response_type （我們的例子是 <code>token</code> ）以及這個認證的 <a href="https://tools.ietf.org/html/rfc6749#section-3.3" target="_blank" rel="noopener">scope</a>：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    NbAuthModule.forRoot(&#123;</span><br><span class="line">      strategies: [</span><br><span class="line">        NbOAuth2AuthStrategy.setup(&#123;</span><br><span class="line">          name: <span class="string">'google'</span>,</span><br><span class="line">          clientId: <span class="string">'YOUR_CLIENT_ID'</span>,</span><br><span class="line">          clientSecret: <span class="string">''</span>,</span><br><span class="line">          authorize: &#123;</span><br><span class="line">            endpoint: <span class="string">'https://accounts.google.com/o/oauth2/v2/auth'</span>,</span><br><span class="line">            responseType: NbOAuth2ResponseType.TOKEN,</span><br><span class="line">            scope: <span class="string">'https://www.googleapis.com/auth/userinfo.profile'</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> YourModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Step-4-路由"><a href="#Step-4-路由" class="headerlink" title="Step 4. 路由"></a>Step 4. 路由</h2><p>我至少須要兩個路由能夠組織 OAuth2 流程。第一個，登入路由，我們可以先簡單有一個按鈕以初始認證程序。第二個，callback 路由，我們需要處理 OAuth2 伺服器的回應。<br>讓我們加入這兩者到我們的路由並參考到一些空元件：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">RouterModule.forChild([</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">''</span>,</span><br><span class="line">    component: NbOAuth2LoginComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'callback'</span>,</span><br><span class="line">    component: NbOAuth2CallbackComponent,</span><br><span class="line">  &#125;,</span><br><span class="line">]),</span><br></pre></td></tr></table></figure><hr><h2 id="Step-5-重新導向-URI"><a href="#Step-5-重新導向-URI" class="headerlink" title="Step 5. 重新導向 URI"></a>Step 5. 重新導向 URI</h2><p>最後一個配置是設定 <code>redirect_uri</code> 參數。確認您已經依據<a href="https://developers.google.com/identity/protocols/OAuth2UserAgent#redirecting" target="_blank" rel="noopener">文件</a>加入這個 URL 到 Google Console。</p><p>Now let’s complete the setup:<br><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    NbAuthModule.forRoot(&#123;</span><br><span class="line">      strategies: [</span><br><span class="line">        NbOAuth2AuthStrategy.setup(&#123;</span><br><span class="line">          name: <span class="string">'google'</span>,</span><br><span class="line">          clientId: <span class="string">'YOUR_CLIENT_ID'</span>,</span><br><span class="line">          clientSecret: <span class="string">''</span>,</span><br><span class="line">          authorize: &#123;</span><br><span class="line">            endpoint: <span class="string">'https://accounts.google.com/o/oauth2/v2/auth'</span>,</span><br><span class="line">            responseType: NbOAuth2ResponseType.TOKEN,</span><br><span class="line">            scope: <span class="string">'https://www.googleapis.com/auth/userinfo.profile'</span>,</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            redirectUri: <span class="string">'http://localhost:4100/example/oauth2/callback'</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> YourModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="Step-6-完整您的元件"><a href="#Step-6-完整您的元件" class="headerlink" title="Step 6. 完整您的元件"></a>Step 6. 完整您的元件</h2><p>最後，我們加入程式碼到我們的元件以初始認證。首先是 <code>NbOAuth2LoginComponent</code> 元件：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'nb-oauth2-login'</span>,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;button class="btn btn-success" *ngIf="!token" (click)="login()"&gt;Sign In with Google&lt;/button&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> NbOAuth2LoginComponent <span class="keyword">implements</span> OnDestroy &#123;</span><br><span class="line"></span><br><span class="line">  alive = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  login() &#123;</span><br><span class="line">    <span class="keyword">this</span>.authService.authenticate(<span class="string">'google'</span>)</span><br><span class="line">      .pipe(takeWhile(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.alive))</span><br><span class="line">      .subscribe(<span class="function">(<span class="params">authResult: NbAuthResult</span>) =&gt;</span> &#123;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnDestroy(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.alive = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這程式碼非常簡單 - 我們呼叫 <code>NbAuthService</code>.<code>authenticate</code> 方法並傳入我們的策略暱稱 - <code>google</code> 以訂閱結果。<br>這將準備 <code>授權</code> 請求 url 並重新導向我們到 Google 認證伺服器。</p><p>現在，我們須要配置 “callback” URL 以能夠正確處理回應：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'nb-playground-oauth2-callback'</span>,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;nb-layout&gt;</span></span><br><span class="line"><span class="string">      &lt;nb-layout-column&gt;Authenticating...&lt;/nb-layout-column&gt;</span></span><br><span class="line"><span class="string">    &lt;/nb-layout&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> NbOAuth2CallbackPlaygroundComponent <span class="keyword">implements</span> OnDestroy &#123;</span><br><span class="line"></span><br><span class="line">  alive = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService, <span class="keyword">private</span> router: Router</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.authService.authenticate(<span class="string">'google'</span>)</span><br><span class="line">      .pipe(takeWhile(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.alive))</span><br><span class="line">      .subscribe(<span class="function">(<span class="params">authResult: NbAuthResult</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (authResult.isSuccess()) &#123;</span><br><span class="line">          <span class="keyword">this</span>.router.navigateByUrl(<span class="string">'/pages/dashboard'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnDestroy(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.alive = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這裡我們呼叫同一個 <code>authenticate</code> 方法，將決定我們處於 <code>redirect</code> 狀態，處理回應；儲存您的通行證並且重新導向您回到您的應用程式。</p><hr><h2 id="範例完成"><a href="#範例完成" class="headerlink" title="範例完成"></a>範例完成</h2><p>完整的程式碼範例可以在 <a href="https://github.com/akveo/nebular/tree/master/src/playground/oauth2" target="_blank" rel="noopener">GitHub</a> 上找到。<br>這裡有練習場可以使用 <a href="https://akveo.github.io/nebular/example/oauth2" target="_blank" rel="noopener">OAuth2 Nebular 範例</a> 試玩看看。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/auth-token">接收認證後的使用者通行證</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nbauthservice" target="_blank" rel="noopener">NbAuthService</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nbtokenservice" target="_blank" rel="noopener">NbTokenService</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nboauth2authstrategy" target="_blank" rel="noopener">NbOAuth2AuthStrategy</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
            <tag> auth </tag>
            
            <tag> oauth </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.6. 以使用者認證保護應用程式 | 中文</title>
      <link href="/auth-guard/"/>
      <url>/auth-guard/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/protecting-application-routes#protecting-application-based-on-user-authentication" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/protecting-application-routes#protecting-application-based-on-user-authentication</a></p><h1 id="以使用者認證保護應用程式"><a href="#以使用者認證保護應用程式" class="headerlink" title="以使用者認證保護應用程式"></a>以使用者認證保護應用程式</h1><p>根據以下應用程式結構：</p><ul><li><code>/pages/*</code> - 保護區僅適用於已認證之使用者</li><li><code>/auth/*</code> - 認證區 (登入、註冊等 …) 適用於未認證之使用者</li></ul><p>Angular 提供一個容易的方法保護你的路由，稱之為 <a href="https://angular.io/guide/router#guard-the-admin-feature" target="_blank" rel="noopener">Router Guard</a>.<br>以下我們展示如何整合 Nebular 認證保護 <code>/pages/*</code> (保護區)</p><hr><h2 id="建立認證守衛-AuthGuard"><a href="#建立認證守衛-AuthGuard" class="headerlink" title="建立認證守衛 (AuthGuard)"></a>建立認證守衛 (AuthGuard)</h2><p>建立 <code>auth-guard.service.ts</code> 於 <code>app-routing.module.ts</code> 附近，檔案內容像是:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CanActivate &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line"></span><br><span class="line">  canActivate() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="完成-canActivate-方法"><a href="#完成-canActivate-方法" class="headerlink" title="完成 canActivate 方法"></a>完成 canActivate 方法</h2><p>然後 import <code>NbAuthService</code> 以及完成 the <code>canActivate</code> 方法:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CanActivate &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NbAuthService &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  canActivate() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.authService.isAuthenticated(); <span class="comment">// canActive 可以回傳 Observable&lt;boolean&gt; 正是 isAuhenticated 回傳的內容</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當 isAuthenticated() 的值為 true 時，路由會被啟用，反之亦然。</p><hr><h2 id="註冊-AuthGuard-服務"><a href="#註冊-AuthGuard-服務" class="headerlink" title="註冊 AuthGuard 服務"></a>註冊 AuthGuard 服務</h2><p>我們須要註冊服務 <code>AuthGuard</code> 到 <code>app.module.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; AuthGuard &#125; <span class="keyword">from</span> <span class="string">'../auth-guard.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  ],</span><br><span class="line">  providers: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    AuthGuard</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h2 id="加入守衛-AuthGuard-到路由"><a href="#加入守衛-AuthGuard-到路由" class="headerlink" title="加入守衛 (AuthGuard) 到路由"></a>加入守衛 (AuthGuard) 到路由</h2><p>最後一步 - 將認證守衛 (AuthGuard) 參考到 <code>app-routing.module.ts</code>:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; AuthGuard &#125; <span class="keyword">from</span> <span class="string">'../auth-guard.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  &#123; </span><br><span class="line">    path: <span class="string">'pages'</span>,</span><br><span class="line">    canActivate: [AuthGuard], <span class="comment">// 這裡告訴 Angular 利用『認證守衛』檢查存取權限</span></span><br><span class="line">    loadChildren: <span class="string">'app/pages/pages.module#PagesModule'</span> </span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'auth'</span>,</span><br><span class="line">    component: NbAuthComponent,</span><br><span class="line">    children: [</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>如果你不是一個受認證的使用者，將無法存取 <code>pages/*</code> 的任何位置。</p><hr><h2 id="重新導向未認證之使用者到登入頁"><a href="#重新導向未認證之使用者到登入頁" class="headerlink" title="重新導向未認證之使用者到登入頁"></a>重新導向未認證之使用者到登入頁</h2><p>當使用者訪問受限制的頁面時，你可能希望使用者可以重新導向到 <code>auth/login</code> 頁面，稍微修改反映這個邏輯：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CanActivate, Router &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NbAuthService &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; tap &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators/tap'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuard <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService, <span class="keyword">private</span> router: Router</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  canActivate() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.authService.isAuthenticated()</span><br><span class="line">      .pipe(</span><br><span class="line">        tap(<span class="function"><span class="params">authenticated</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (!authenticated) &#123;</span><br><span class="line">            <span class="keyword">this</span>.router.navigate([<span class="string">'auth/login'</span>]);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">      );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們只是檢查 <code>isAuthenticated</code> 返回的值然後簡單的重新導向到登入頁</p><p>很簡單! 希望能對你有幫助。</p><hr>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.5. 取得使用者通行證 | 中文</title>
      <link href="/auth-token/"/>
      <url>/auth-token/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/getting-user-token" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/getting-user-token</a></p><h1 id="取得使用者通行證"><a href="#取得使用者通行證" class="headerlink" title="取得使用者通行證"></a>取得使用者通行證</h1><h2 id="在登入或註冊之後取得使用者通行證"><a href="#在登入或註冊之後取得使用者通行證" class="headerlink" title="在登入或註冊之後取得使用者通行證"></a>在登入或註冊之後取得使用者通行證</h2><p>這一步，我們假設 Nebular 認證模組已經安裝好也可以運行了，您已經成功配置認證策略和根據您的需求調整認證產品外觀。<br>在成功認證後可以取得使用者通行證，有能力與伺服器通訊，例如顯示 username 在應用程式的標頭位置。我們假設您的後端回傳一個 JWT 通行證，所以我們可以使用通行證的「負載資訊 payload」以擷取出使用者的資訊。<br>每一個 <code>策略</code> 都有預設的通行證類別。例如 <code>NbPasswordAuthStrategy</code> 使用 <code>NbAuthSimpleToken</code> ，又例如 <code>NbOAuth2AuthProvider</code> 使用 <code>NbAuthOAuth2Token</code>。如果需要可以指定另一個通行證類別，下方舉例說明。</p><h2 id="配置通行證型態"><a href="#配置通行證型態" class="headerlink" title="配置通行證型態"></a>配置通行證型態</h2><p>讓我們告訴 Nebular 我們正等待 JWT 通行證而不是簡單字串通行證。<br>我們只需要提供相對應的類別即可。打開您的 <code>app.module.ts</code> 並調整您的 <code>策略</code> 配置：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">             </span><br><span class="line">             token: &#123;</span><br><span class="line">               <span class="keyword">class</span>: NbAuthJWTToken,</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>這一行告訴 Angular 注入 <code>NbAuthJWTToken</code> (而不是預設的 <code>NbAuthSimpleToken</code> ) ，它是一個包裝類別，會包裝好從您的 API 服務回應的值。</p><h2 id="配置通行證萃取"><a href="#配置通行證萃取" class="headerlink" title="配置通行證萃取"></a>配置通行證萃取</h2><p>然後，我們配置 <code>NbPasswordAuthStrategy</code> 應該在登入或註冊的回應資料中找到通行證。<br>使用預設的 <code>NbPasswordAuthStrategy</code> 預期您的通行證是位於以 JSON 格式回應的 <code>data.token</code> 鍵之下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    token: 'some-jwt-token'</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們假設我們 API 只回應一個通行證像是 <code>{ token: &#39;some-jwt-token&#39; }</code> 沒有包裝您的回應在 <code>data</code> 屬性中，讓我們告訴 Nebular：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">             </span><br><span class="line">             token: &#123;</span><br><span class="line">               <span class="keyword">class</span>: NbAuthJWTToken,</span><br><span class="line">              </span><br><span class="line">               key: <span class="string">'token'</span>, <span class="comment">// 這個參數告知從哪裡查到通行證的值</span></span><br><span class="line">             &#125;</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用通行證"><a href="#使用通行證" class="headerlink" title="使用通行證"></a>使用通行證</h2><p>好的，讓我們使用通行證擷取負載資訊並顯示 username 在標頭中。打開您的 <code>header.component.ts</code> 並 import 以下服務：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NbAuthJWTToken, NbAuthService &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br></pre></td></tr></table></figure><p>然後我們建立 <code>user</code> 變數，將通行證中負載資訊儲存在元件中： </p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HeaderComponent &#123;</span><br><span class="line"></span><br><span class="line">  user = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後我們注入 <code>NbAuthService</code> 並且訂閱一個 <code>onTokenChange</code> 方法，在每次通行證更新時它會推送一個事件，所以標頭元件不須要額外地刷新或請求資料即可跟上來自後端的最新資訊：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HeaderComponent &#123;</span><br><span class="line"></span><br><span class="line">  user = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: NbAuthService</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.authService.onTokenChange()</span><br><span class="line">      .subscribe(<span class="function">(<span class="params">token: NbAuthJWTToken</span>) =&gt;</span> &#123;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> (token.isValid()) &#123;</span><br><span class="line">          <span class="keyword">this</span>.user = token.getPayload(); <span class="comment">// 這裡我們取得來自通行證地負載資訊並且分配給 `user` 變數。</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後，我們把 <code>user</code> 變數放置在 template 中以顯示使用者的資訊。<br>在這裡， <code>nb-user</code> 元件是一個非常適合的元件：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;nb-layout-header fixed&gt;</span></span><br><span class="line"><span class="string">      &lt;nb-user [name]="user?.name" [picture]="user?.picture"&gt;&lt;/nb-user&gt;</span></span><br><span class="line"><span class="string">    &lt;/nb-layout-header&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HeaderComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>我們假設可以從負載資訊中擷取 name 和 picture 屬性</em></p><p>完成！相對來說您可以注入 <code>NbAuthService</code> 在任何元件中，以管理您在應用程式中認證的狀態。</p><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="https://akveo.github.io/nebular/docs/auth/nbauthservice" target="_blank" rel="noopener">NbAuthService</a></li><li><a href="https://akveo.github.io/nebular/docs/auth/nbtokenservice" target="_blank" rel="noopener">NbTokenService</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
            <tag> auth </tag>
            
            <tag> token </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.4. 認證 UI 元件 | 中文</title>
      <link href="/auth-ui/"/>
      <url>/auth-ui/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/configuring-ui" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/configuring-ui</a></p><h1 id="認證-UI-元件"><a href="#認證-UI-元件" class="headerlink" title="認證 UI 元件"></a>認證 UI 元件</h1><p>認證模組由這些認證元件組成：</p><ul><li><code>&lt;nb-auth-block&gt;&lt;/nb-auth-block&gt;</code> - 元件包裝，為已經包含在這個元件內的 Form 提供基礎的樣式</li><li><code>&lt;nb-register&gt;&lt;/nb-register&gt;</code> - 註冊頁</li><li><code>&lt;nb-login&gt;&lt;/nb-login&gt;</code> - 登入頁</li><li><code>&lt;nb-logout&gt;&lt;/nb-logout&gt;</code> - 登出頁 - 當送出登出請求時，顯示 “登出中…” 訊息</li><li><code>&lt;nb-request-password&gt;&lt;/nb-request-password&gt;</code> - 要求密碼頁</li><li><code>&lt;nb-reset-password&gt;&lt;/nb-reset-password&gt;</code> - 重置密碼頁<hr></li></ul><h2 id="UI-設定"><a href="#UI-設定" class="headerlink" title="UI 設定"></a>UI 設定</h2><p><code>AuthModule</code> 除了接受「策略」的配置也接受 UI 的設定，在 <code>forms</code> 鍵下：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>你可以為每個表單單獨配置，以下是預設值：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> NbAuthSocialLink &#123;</span><br><span class="line">  link?: <span class="built_in">string</span>,</span><br><span class="line">  url?: <span class="built_in">string</span>,</span><br><span class="line">  target?: <span class="built_in">string</span>,</span><br><span class="line">  title?: <span class="built_in">string</span>,</span><br><span class="line">  icon?: <span class="built_in">string</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> socialLinks: NbAuthSocialLink[] = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> defaultSettings: <span class="built_in">any</span> = &#123;</span><br><span class="line">  forms: &#123;</span><br><span class="line">    login: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>, <span class="comment">// 要顯示成功訊息給使用者時，在成功登入後，重新導向前給予延遲時間。</span></span><br><span class="line">      strategy: <span class="string">'email'</span>,  <span class="comment">// 策略 id 鍵.</span></span><br><span class="line">      rememberMe: <span class="literal">true</span>,   <span class="comment">// 是否顯示 `記住我` 之 Checkbox</span></span><br><span class="line">      showMessages: &#123;     <span class="comment">// 是否顯示成功/錯誤訊息</span></span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      socialLinks: socialLinks, <span class="comment">// 顯示社群連結在頁面下方</span></span><br><span class="line">    &#125;,</span><br><span class="line">    register: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">      showMessages: &#123;</span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      terms: <span class="literal">true</span>,</span><br><span class="line">      socialLinks: socialLinks,</span><br><span class="line">    &#125;,</span><br><span class="line">    requestPassword: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">      showMessages: &#123;</span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      socialLinks: socialLinks,</span><br><span class="line">    &#125;,</span><br><span class="line">    resetPassword: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">      showMessages: &#123;</span><br><span class="line">        success: <span class="literal">true</span>,</span><br><span class="line">        error: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      socialLinks: socialLinks,</span><br><span class="line">    &#125;,</span><br><span class="line">    logout: &#123;</span><br><span class="line">      redirectDelay: <span class="number">500</span>,</span><br><span class="line">      strategy: <span class="string">'email'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    validation: &#123;</span><br><span class="line">      password: &#123;</span><br><span class="line">        required: <span class="literal">true</span>,</span><br><span class="line">        minLength: <span class="number">4</span>,</span><br><span class="line">        maxLength: <span class="number">50</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      email: &#123;</span><br><span class="line">        required: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      fullName: &#123;</span><br><span class="line">        required: <span class="literal">false</span>,</span><br><span class="line">        minLength: <span class="number">4</span>,</span><br><span class="line">        maxLength: <span class="number">50</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="刪除重新導向的延遲時間"><a href="#刪除重新導向的延遲時間" class="headerlink" title="刪除重新導向的延遲時間"></a>刪除重新導向的延遲時間</h2><p>如果要刪除重新導向的延遲時間以及不再使用成功訊息時，可以參考以下範例：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;</span><br><span class="line">           login: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           register: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           requestPassword: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           resetPassword: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">             showMessages: &#123;</span><br><span class="line">               success: <span class="literal">false</span>,</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           logout: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果看起來有點冗長，可以移動重複的部分到一個變數中像是：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> formSetting: <span class="built_in">any</span> = &#123;</span><br><span class="line">  redirectDelay: <span class="number">0</span>,</span><br><span class="line">  showMessages: &#123;</span><br><span class="line">    success: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;</span><br><span class="line">           login: formSetting,</span><br><span class="line">           register: formSetting,</span><br><span class="line">           requestPassword: formSetting,</span><br><span class="line">           resetPassword: formSetting,</span><br><span class="line">           logout: &#123;</span><br><span class="line">             redirectDelay: <span class="number">0</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>這個設定將與預設值合併，所以不須要特別輸入所有的鍵值到這裡。</p><hr><h2 id="客製化-UI-元件"><a href="#客製化-UI-元件" class="headerlink" title="客製化 UI 元件"></a>客製化 UI 元件</h2><p>案例中，當 Nebular 認證元件的產品外觀無法滿足您的需求時，您可以簡單地以 Nebular 所提供地認證元件為基礎建立客製化認證元件。</p><p>您需要做地就是：</p><h3 id="複製元件原始碼"><a href="#複製元件原始碼" class="headerlink" title="複製元件原始碼"></a>複製元件原始碼</h3><p>複製您想要變更在您專案的元件 <a href="https://github.com/akveo/nebular/tree/master/src/framework/auth/components" target="_blank" rel="noopener">原始碼</a>。如果您使用 <code>ngx-admin</code>，您可以放置於 <code>src/app/@theme/components/auth</code>。重新命名元件以確認您的應用程式前綴，例如使用 <code>ngx-</code> 作為前綴。</p><blockquote><p><strong>不用複製其他認證模組的檔案</strong><br>不須要複製服務以及其他檔案，否則會與原生的 Nebular 認證模組發生衝突。</p></blockquote><blockquote><p><strong>重新命名</strong><br>確認以重新命名元件類別的名稱以及根據應用程式的 prefix 重新命名 selectors。您可以使用您編輯器的 <code>重構 Refactor</code> 功能。</p></blockquote><h3 id="註冊元件"><a href="#註冊元件" class="headerlink" title="註冊元件"></a>註冊元件</h3><p>註冊主題到您的 <code>*.module.ts</code> (例如 <code>theme.module.ts</code>):</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// make sure the path is correct for your setup</span></span><br><span class="line"><span class="keyword">import</span> &#123; NgxAuthComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxAuthBlockComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth-block/auth-block.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLoginComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/login/login.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRegisterComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/register/register.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLogoutComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/logout/logout.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRequestPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/request-password/request-password.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxResetPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/reset-password/reset-password.component'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [...],</span><br><span class="line">  declarations: [</span><br><span class="line">  </span><br><span class="line">      ...</span><br><span class="line">       </span><br><span class="line">      NgxAuthComponent,</span><br><span class="line">      NgxAuthBlockComponent,</span><br><span class="line">      NgxLoginComponent,</span><br><span class="line">      NgxRegisterComponent,</span><br><span class="line">      NgxRequestPasswordComponent,</span><br><span class="line">      NgxResetPasswordComponent,</span><br><span class="line">      NgxLogoutComponent,</span><br><span class="line">    ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> ThemeModule &#123;</span><br></pre></td></tr></table></figure><p><em>在這個例子我們決定複製所有認證元件徹底重作 UI。</em></p><h3 id="更新路由"><a href="#更新路由" class="headerlink" title="更新路由"></a>更新路由</h3><p>import 新的元件以更新您的路由：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NgxAuthComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxAuthBlockComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/auth-block/auth-block.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLoginComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/login/login.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRegisterComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/register/register.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxLogoutComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/logout/logout.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxRequestPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/request-password/request-password.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NgxResetPasswordComponent &#125; <span class="keyword">from</span> <span class="string">'./components/auth/reset-password/reset-password.component'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'auth'</span>,</span><br><span class="line">    component: NgxAuthComponent,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        component: NgxLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'login'</span>,</span><br><span class="line">        component: NgxLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'register'</span>,</span><br><span class="line">        component: NgxRegisterComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'logout'</span>,</span><br><span class="line">        component: NgxLogoutComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'request-password'</span>,</span><br><span class="line">        component: NgxRequestPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'reset-password'</span>,</span><br><span class="line">        component: NgxResetPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>現在您可以根據您的須要調整元件。請確保與 NbAuthService 相關的邏輯保持不變，使這些元件仍然可以與認證策略通信。</p><hr><h2 id="下一站"><a href="#下一站" class="headerlink" title="下一站"></a>下一站</h2><ul><li><a href="/auth-token">接收認證後的使用者通行證</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
            <tag> auth </tag>
            
            <tag> ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.3. 配置認證策略 | 中文</title>
      <link href="/auth-strategy/"/>
      <url>/auth-strategy/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/configuring-a-strategy#strategy" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/configuring-a-strategy#strategy</a></p><h1 id="認證策略"><a href="#認證策略" class="headerlink" title="認證策略"></a>認證策略</h1><p>在 Nebular 中的詞彙 <code>認證策略 Auth Strategy</code> 是一個為一些特定的認證流程（像是 email/password、OAuth2 等流程）依認證邏輯而設計的類別。<br>它接受使用者的輸入（login/email/password/token 等…)，將輸入傳遞給後端 API 並將輸出結果提供給認證 UI 層。<br>目前，有兩個認證策略可用：</p><ul><li><code>NbDummyAuthStrategy</code> - 為了測試目的的簡單策略，當 API 還在開發階段時可以用於模擬後端的回應。</li><li><code>NbPasswordAuthStrategy</code> - 最常見的 email/login/password 認證策略。</li></ul><p>每一個策略有一個擁有預設值的配置清單可用，但你可以根據自己的需求調整配置。</p><hr><h2 id="認證策略配置"><a href="#認證策略配置" class="headerlink" title="認證策略配置"></a>認證策略配置</h2><p>一個例子，讓我們為 <code>NbPasswordAuthStrategy</code> 配置 API 端口。這個策略是被預設配置的，如果您需要任何客製化的做法，請參閱 <a href="https://akveo.github.io/nebular/docs/auth/nbpasswordauthstrategy#nbpasswordauthstrategy" target="_blank" rel="noopener">預設配置的設定值</a> 。<br>我們假設您已經安裝「認證模組」在您的 <code>*.module.ts</code> 檔案:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>email</code> 這是我們分配給「策略」的別名，以便我們以後可以動態的提到它。這也允許我們在一個應用程式中配置多個策略。</p><hr><h2 id="設定-API-配置"><a href="#設定-API-配置" class="headerlink" title="設定 API 配置"></a>設定 API 配置</h2><p>現在我們加入一個 API 端口。根據 <a href="https://akveo.github.io/nebular/docs/auth/nbpasswordauthstrategy#nbpasswordauthstrategy" target="_blank" rel="noopener">NbPasswordAuthStrategy documentation</a>，每一個 function （登入/註冊等…）我們有一個 <code>baseEndpoint</code> 設定以及一個 <code>endpoint</code> 設定：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">            </span><br><span class="line">             baseEndpoint: <span class="string">''</span>,</span><br><span class="line">              login: &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">                endpoint: <span class="string">'/api/auth/login'</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">              register: &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">                endpoint: <span class="string">'/api/auth/register'</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>假設我們的 API 位於獨立的伺服器上 <code>http://example.com/app-api/v1</code> 於是修改 <code>baseEndpoint</code> ：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="comment">// ...</span></span><br><span class="line"> baseEndpoint: <span class="string">'http://example.com/app-api/v1'</span>,</span><br><span class="line"> <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>並且配置其端口，請考慮到最終端口將包含 <code>baseEndpoint + method.endpoint</code>:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  baseEndpoint: <span class="string">'http://example.com/app-api/v1'</span>,</span><br><span class="line">  login: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-in'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  register: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-up'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  logout: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-out'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  requestPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/request-pass'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  resetPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/reset-pass'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後，我們假設與預設策略不同，我們的 API 僅接受 <code>HTTP POST</code>，所我們加上 <code>method</code> 解決這個問題：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  baseEndpoint: <span class="string">'http://example.com/app-api/v1'</span>,</span><br><span class="line">  login: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-in'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  register: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-up'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  logout: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/sign-out'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  requestPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/request-pass'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  resetPass: &#123;</span><br><span class="line">    endpoint: <span class="string">'/auth/reset-pass'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong><br>不須要在此列出所有的配置。您的設定將相對應地與預設策略的設定合併。</p></blockquote><p>太好了！經過這些簡單的步驟，您針對 API 後端正確地配置身份認證層。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/auth-ui">調整認證元件 UI</a></li><li><a href="/auth-token">接收認證後的使用者通行證</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
            <tag> auth </tag>
            
            <tag> oauth </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.2. 安裝安全延伸模組 | 中文</title>
      <link href="/auth-install/"/>
      <url>/auth-install/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/installation" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/installation</a></p><h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><blockquote><p>注意<br>如果您使用我們的 <a href="/install-starter-kit">ngx-admin 入門套件</a>) 那麼您已經有認證模組了。</p></blockquote><h2 id="安裝模組"><a href="#安裝模組" class="headerlink" title="安裝模組"></a>安裝模組</h2><p>首先，我們可以從 npm 安裝這個模組，並且確認您有 <a href="/install-into-existing">安裝 Nebular 主題模組</a>。<br>Nebular 主題是內建認證元件的需求。如果您不想使用內建認證元件，可以只使用 <code>認證模組</code>，而不需要使用 <code>Nebular 主題</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @nebular/auth</span><br></pre></td></tr></table></figure><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用 NbAuthModule 模組以及 <code>NbPasswordAuthStrategy</code> 策略類別:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NbPasswordAuthStrategy, NbAuthModule &#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br></pre></td></tr></table></figure><hr><h2 id="配置策略類別"><a href="#配置策略類別" class="headerlink" title="配置策略類別"></a>配置策略類別</h2><p>現在讓我們利用特定的「策略（strategy）」配置這個模組，這個例子我們加入 <code>NbPasswordAuthStrategy</code>。<br>我們須要透過呼叫靜態方法 <code>setup</code> 以傳入一個 <strong>選項清單</strong> 以加入一個策略：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">   NbAuthModule.forRoot(&#123;</span><br><span class="line">         strategies: [</span><br><span class="line">           NbPasswordAuthStrategy.setup(&#123;</span><br><span class="line">             name: <span class="string">'email'</span>,</span><br><span class="line">           &#125;),</span><br><span class="line">         ],</span><br><span class="line">         forms: &#123;&#125;,</span><br><span class="line">       &#125;), </span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我們也規定 <code>forms</code> 鍵（key），以為認證元件配置可用的選項。<br>我們現在先留白，詳細請參考 <a href="/auth-ui">配置認證 UI 元件</a> 文章。</p><hr><h2 id="啟用-Auth-元件"><a href="#啟用-Auth-元件" class="headerlink" title="啟用 Auth 元件"></a>啟用 Auth 元件</h2><p>下一步我們須要配置認證元件的路由，讓我們加入以下程式碼到您的 <code>app-routing.module.ts</code> 檔案:</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  NbAuthComponent,</span><br><span class="line">  NbLoginComponent,</span><br><span class="line">  NbRegisterComponent,</span><br><span class="line">  NbLogoutComponent,</span><br><span class="line">  NbRequestPasswordComponent,</span><br><span class="line">  NbResetPasswordComponent,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@nebular/auth'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'auth'</span>,</span><br><span class="line">    component: NbAuthComponent,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        component: NbLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'login'</span>,</span><br><span class="line">        component: NbLoginComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'register'</span>,</span><br><span class="line">        component: NbRegisterComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'logout'</span>,</span><br><span class="line">        component: NbLogoutComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'request-password'</span>,</span><br><span class="line">        component: NbRequestPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'reset-password'</span>,</span><br><span class="line">        component: NbResetPasswordComponent,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">];</span><br></pre></td></tr></table></figure><hr><h2 id="啟用樣式"><a href="#啟用樣式" class="headerlink" title="啟用樣式"></a>啟用樣式</h2><p>最後，但不代表最不重要 - 安裝元件樣式到您的 styles.scss (<a href="/enabling-theme-system">更多細節</a>):</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/auth/styles/all'</span>; <span class="comment">// 或是 @import '~@nebular/auth/styles/&#123;theme-name&#125;';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ... </span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">include</span> nb-install() &#123;</span><br><span class="line">  @<span class="keyword">include</span> nb-theme-global();</span><br><span class="line">  @<span class="keyword">include</span> nb-auth-global(); <span class="comment">// 附加安裝 mixin 在 nb-install 裡面</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>此時，您可以打開瀏覽起瀏覽 <a href="http://localhost:4200/#/auth/login" target="_blank" rel="noopener">http://localhost:4200/#/auth/login</a> 即顯示一個登入頁。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/auth-strategy">配置認證策略</a></li><li><a href="/auth-ui">調整認證元件 UI</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 6.1. 認證模組 | 中文</title>
      <link href="/auth-intro/"/>
      <url>/auth-intro/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/auth/introduction" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/auth/introduction</a></p><h1 id="認證模組"><a href="#認證模組" class="headerlink" title="認證模組"></a>認證模組</h1><p>認證模組主要目的是為了較容易設定 Angulr 應用程式的認證層而提供可外掛的元件組與服務。<br>這個模組分離 UI 部分（登入、註冊等 … ）以及在「認證 <code>策略</code> 層」幫助下的商業邏輯。</p><blockquote><p><strong>注意</strong><br>這個步驟仍然要與後端服務通訊</p></blockquote><h2 id="認證-UI-元件"><a href="#認證-UI-元件" class="headerlink" title="認證 UI 元件"></a>認證 UI 元件</h2><ul><li>登入</li><li>登出</li><li>註冊</li><li>密碼要求</li><li>密碼重置</li></ul><p>你可以選擇內建的元件或是客製化自己的元件。 </p><hr><h2 id="認證策略"><a href="#認證策略" class="headerlink" title="認證策略"></a>認證策略</h2><ul><li><code>NbDummyAuthStrategy</code> - 為了測試目的的簡單策略，當 API 還在開發階段時可以用於模擬後端的回應。</li><li><code>NbPasswordAuthStrategy</code> - 最常見的 email/login/password 認證策略。</li><li><code>NbOAuth2AuthStrategy</code> - 最受歡迎的認證框架使應用程式可以獲得在 HTTP 服務下受存取限制的使用者帳戶。 <hr></li></ul><h2 id="其他小幫手服務"><a href="#其他小幫手服務" class="headerlink" title="其他小幫手服務"></a>其他小幫手服務</h2><ul><li><code>NbAuthService</code> - 與「配置策略」互通的服務介面。</li><li><code>NbTokenService</code> - 允許您管理認證「通行證（token）」的服務；取得、設置、清除以及監聽隨時改變的通行證。</li><li><code>NbTokenLocalStorage</code> - 為儲存「通行證（token）」於瀏覽器 local storage 的儲存服務。</li><li><code>NbAuthJWTToken</code> 和 <code>NbAuthSimpleToken</code> - 與通行證工作的小幫手類別</li><li><code>NbAuthJWTInterceptor</code> 和 <code>NbAuthSimpleInterceptor</code> - http 「攔截器（interceptors）」 將「通行證（token）」注入至 http 請求。<hr></li></ul><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li>Auth Module <a href="https://akveo.github.io/nebular/docs/auth/installation" target="_blank" rel="noopener">Installation</a> </li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
            <tag> auth </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 2.4. 啟用主題系統 | 中文</title>
      <link href="/enabling-theme-system/"/>
      <url>/enabling-theme-system/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/guides/enable-theme-system#advanced-setup" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/guides/enable-theme-system#advanced-setup</a></p><h1 id="啟用主題系統"><a href="#啟用主題系統" class="headerlink" title="啟用主題系統"></a>啟用主題系統</h1><blockquote><p><strong>注意</strong><br>如果您使用我們的 <a href="install-starter-kit">ngx-admin 入門套件</a> 那麼您已經有了進階設定。</p></blockquote><h2 id="基礎設定"><a href="#基礎設定" class="headerlink" title="基礎設定"></a>基礎設定</h2><p><strong>當</strong>：你只須要 Nebular 提供的預設樣式（宇宙樣式 cosmic 或是預設樣式 default），且不打算使用變數或是「熱載 hot-reload」 支援。</p><p>1) 那麼您只須要加入一個你想要使用的主題的 CSS 檔案到 <code>.angular-cli.json</code> 檔案像是:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"styles": [</span><br><span class="line">        <span class="string">"../node_modules/@nebular/theme/styles/prebuilt/cosmic.css"</span>, // 或是 default.css</span><br><span class="line">      ],</span><br></pre></td></tr></table></figure><p>就這樣！ 未來，如果您須要進階功能您可以簡單地從「一般設定步驟」或是「進階設定步驟」開始使用主題。</p><hr><h2 id="一般設定"><a href="#一般設定" class="headerlink" title="一般設定"></a>一般設定</h2><p><strong>當</strong>：您希望在您的程式碼中使用主題系統並且能夠更改變數時。</p><p><em>注意</em>：這個設定可能看起來有點冗長，遺憾的是 angular-cli 對客製化配置的支援有限；希望未來的版本和外掛支援可以大大簡化。</p><p>1) 使用 Nebular 主題宣告建立一個 <code>themes.scss</code> 檔案。我們假設這個主題是以 <code>default</code> 主題為基礎，所以依然命名為 <code>default</code>。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 匯入 Nebular 主題系統以及 default 主題</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/theming'</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/themes/default'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改變你想要改變的變數或是不設定變數而保留預設值。預設值為白色，讓我們把它變成藍色。</span></span><br><span class="line"><span class="variable">$nb-themes</span>: nb-register-theme((</span><br><span class="line">  color-bg: <span class="number">#4ca6ff</span>,</span><br><span class="line">  shadow: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">#3780c0</span>,</span><br><span class="line">  layout-bg: <span class="number">#ffffff</span>,</span><br><span class="line">  color-fg: <span class="number">#222222</span></span><br><span class="line">), default, default); </span><br><span class="line"><span class="comment">// 第一個 default 為新主題的名稱；第二 default 為以 Nebular 提供的 default 主題為基礎。</span></span><br></pre></td></tr></table></figure><p>2) 現在找到您的 <code>styles.scss</code> (或者建立一個然後加入到 <code>.angular-cli.json</code> 的 <code>&quot;styles&quot;: [..]</code> 之下) 並且根據以下程式碼貼上：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 這是您建立的 themes.scss 檔，請確認路徑正確</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">'themes'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 框架的元件樣式將使用您的新主題</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/globals'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安裝框架</span></span><br><span class="line">@<span class="keyword">include</span> nb-install() &#123;</span><br><span class="line">  @<span class="keyword">include</span> nb-theme-global();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>3) 在這個步驟，您已經可以自訂變數以變更元件的外觀與行為。為了能夠將這些（或是新的） 變數使用於客製化的元件中，只需要在任何 <code>*.component.scss</code> 中加入一行 <code>import</code> 。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'../../../@theme/styles/themes'</span>;</span><br><span class="line"></span><br><span class="line">:host &#123;</span><br><span class="line"></span><br><span class="line">  background: nb-theme(card-bg); <span class="comment">// 然後使用這個主題</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong><br>只需要呼叫 <code>nb-theme(variable-name)</code> 函數即可存取變數.</p></blockquote><p>這個步驟您將得到類似下圖的內容：</p><p><img src="/assets/images/articles/blue-theme.png" alt="image"></p><hr><h2 id="進階設定"><a href="#進階設定" class="headerlink" title="進階設定"></a>進階設定</h2><p><strong>當</strong>：您須要在 run-time 時在多個主題中切換主題時</p><p>這個步驟假設您已經完成 <em>一般設定</em> 步驟.</p><p>1) 假設您已經有一個來自前一個步驟產生的 <code>default</code> 主題的 <code>themes.scss</code> 檔案，讓我們加入一個新的主題，以 Nebular 的 <code>cosmic</code> 主題為基礎並且命名為 <code>dark</code>:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加上 cosmic 主題 import 在原有的 default 主題之下;</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/themes/cosmic'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 並將兩個主題都標記為啟用</span></span><br><span class="line"><span class="variable">$nb-enabled-themes</span>: (default, dark);</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改變你想要改變的變數或是不設定變數而保留預設值。預設值為宇宙色，讓我們把它變成黑暗色。</span></span><br><span class="line"><span class="variable">$nb-themes</span>: nb-register-theme((</span><br><span class="line"></span><br><span class="line">  color-bg: <span class="number">#222222</span>,</span><br><span class="line">  shadow: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">#000000</span>,</span><br><span class="line">  color-fg: <span class="number">#303030</span>,</span><br><span class="line">  layout-bg: <span class="number">#ededed</span>,</span><br><span class="line">), dark, cosmic);</span><br></pre></td></tr></table></figure><p>所以您的 <code>themes.scss</code> 檔案會看起來是：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/theming'</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/themes/default'</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~@nebular/theme/styles/themes/cosmic'</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nb-enabled-themes</span>: (default, dark);</span><br><span class="line"></span><br><span class="line"><span class="comment">// default 主題</span></span><br><span class="line"><span class="variable">$nb-themes</span>: nb-register-theme((</span><br><span class="line"></span><br><span class="line">  color-bg: <span class="number">#4ca6ff</span>,</span><br><span class="line">  shadow: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">#3780c0</span>,</span><br><span class="line">  layout-bg: <span class="number">#ffffff</span>,</span><br><span class="line">  color-fg: <span class="number">#222222</span>,</span><br><span class="line">), default, default);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// dark 主題</span></span><br><span class="line"><span class="variable">$nb-themes</span>: nb-register-theme((</span><br><span class="line"></span><br><span class="line">  color-bg: <span class="number">#222222</span>,</span><br><span class="line">  shadow: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">#000000</span>,</span><br><span class="line">  color-fg: <span class="number">#303030</span>,</span><br><span class="line">  layout-bg: <span class="number">#ededed</span>,</span><br><span class="line">), dark, cosmic);</span><br></pre></td></tr></table></figure><p>此時啟用您的 <code>dark</code> 主題您的頁面會看起來像是：</p><p><img src="/assets/images/articles/dark-theme.png" alt="image"></p><p>2) 現在啟用「熱載　<code>hot reload</code>」的魔術，打包您所有含有 <code>nb-install-component</code> 的 <code>*.component.scss</code> 樣式 像是：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'../../../@theme/styles/themes'</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">include</span> nb-install-component() &#123;</span><br><span class="line">  <span class="attribute">background</span>: nb-theme(card-bg); <span class="comment">// 對於每一個被註冊的主題鑲嵌相對應的值</span></span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: nb-theme(color-bg);</span><br><span class="line">    <span class="attribute">font-weight</span>: nb-theme(font-weight-bold);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong><br>這個 <strong>install-component</strong> SCSS mixin ‘已經涵蓋了’ 宣告在程式碼中的 <strong>:host</strong>，意思是你不需要在 <strong>@include nb-install-component() {</strong> 中而外宣告一個 <strong>:host</strong> 並且樣式也會正確的渲染到這個 <code>host</code>。</p></blockquote><p>完成，你可以在 run-time 時改變主題。以下是如何從元件中執行這個操作：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用主題服務</span></span><br><span class="line">constructor(private themeService: NbThemeService) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 改變成 `dark`</span><br><span class="line">enableDarkTheme() &#123;</span><br><span class="line">  this.themeService.changeTheme(<span class="string">'dark'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="https://akveo.github.io/nebular/docs/guides/theme-system" target="_blank" rel="noopener">Theme System Concepts</a>.</li><li><a href="https://akveo.github.io/nebular/docs/themes/default" target="_blank" rel="noopener">Default Theme variables table</a>.</li><li><a href="https://akveo.github.io/nebular/docs/themes/cosmic" target="_blank" rel="noopener">Cosmic Theme variables table</a>.</li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 2.3. Nebular 主題系統 | 中文</title>
      <link href="/concept-theme-system/"/>
      <url>/concept-theme-system/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/guides/theme-system#nebular-theme-system" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/guides/theme-system#nebular-theme-system</a></p><h1 id="Nebular-主題系統"><a href="#Nebular-主題系統" class="headerlink" title="Nebular 主題系統"></a>Nebular 主題系統</h1><p>Nebular 主題系統是一套規則， 我們將如何組織 SCSS 文件和變數以實現以下目標:</p><ul><li>能夠透過管理變數不需要改變 SCSS 的前提下，能夠靈活地改變應用程式的產品外觀。</li><li>能夠在 runtime 時不需要重新載入頁面而切換視覺主題。</li><li>支援 CSS 變數 (部分實現)。<hr></li></ul><h2 id="Theme-對應表"><a href="#Theme-對應表" class="headerlink" title="Theme 對應表"></a>Theme 對應表</h2><p>每個主題都被表示為一個 SCSS map 並帶有「鍵值對」的清單：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$theme</span>: (</span><br><span class="line">  font-main: unquote(<span class="string">'"Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif'</span>),</span><br><span class="line">  font-secondary: font-main,</span><br><span class="line"></span><br><span class="line">  font-weight-thin: <span class="number">200</span>,</span><br><span class="line">  font-weight-light: <span class="number">300</span>,</span><br><span class="line">  font-weight-normal: <span class="number">400</span>,</span><br><span class="line">  font-weight-bolder: <span class="number">500</span>,</span><br><span class="line">  font-weight-bold: <span class="number">600</span>,</span><br><span class="line">  font-weight-ultra-bold: <span class="number">800</span>,</span><br><span class="line"></span><br><span class="line">  base-font-size: <span class="number">16px</span>,</span><br><span class="line"></span><br><span class="line">  font-size-xlg: <span class="number">1.25rem</span>,</span><br><span class="line">  font-size-lg: <span class="number">1.125rem</span>,</span><br><span class="line">  font-size: <span class="number">1rem</span>,</span><br><span class="line">  font-size-sm: <span class="number">0.875rem</span>,</span><br><span class="line">  font-size-xs: <span class="number">0.75rem</span>,</span><br><span class="line"></span><br><span class="line">  radius: <span class="number">0.375rem</span>,</span><br><span class="line">  padding: <span class="number">1.25rem</span>,</span><br><span class="line">  margin: <span class="number">1.5rem</span>,</span><br><span class="line">  line-height: <span class="number">1.25</span>,</span><br><span class="line">  </span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>其中 <em>key</em> 是變數名稱而 <em>value</em> 是 SCSS 的原始值 (像是 color、string 等 …) 或 <strong>父親變數名稱</strong> 以便您可以繼承不同變數的值:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$theme</span>: (</span><br><span class="line">  font-main: unquote(<span class="string">'"Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif'</span>),</span><br><span class="line">  font-secondary: font-main,</span><br></pre></td></tr></table></figure><p>這裡的 <code>font-secondary</code> 繼承來自 <code>font-main</code> 的值.</p><hr><h2 id="元件的樣式變數"><a href="#元件的樣式變數" class="headerlink" title="元件的樣式變數"></a>元件的樣式變數</h2><p>有一個變數清單，您可以為 Nebular 的每一個元件作修改<br>例如 - header 元件變數如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span>-<span class="attribute">font-family</span>: font-secondary,</span><br><span class="line">header-font-size: font-size,</span><br><span class="line">header-line-height: line-height,</span><br><span class="line">header-fg: color-fg-heading,</span><br><span class="line">header-bg: color-bg,</span><br><span class="line">header-height: <span class="number">4.75rem</span>,</span><br><span class="line">header-padding: <span class="number">1.25rem</span>,</span><br><span class="line">header-shadow: shadow,</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>如您所見，有一組簡單元件的 8 個變數，其中有 6 個變數繼承主題變數的預設值。<br>意味著，您可以建立一個全新且統一的元件產品外觀，在大部分情況下您只需要改變大約 10 個通用變數像是 <code>color-bg</code> 、 <code>shadow</code> 等，即可完全改變 UI。</p><p>元件樣式變數清單被指定於「元件文件」中，例如 <a href="https://akveo.github.io/nebular/docs/components/layout/theme#nblayoutcomponent" target="_blank" rel="noopener">styles for header component</a>.</p><hr><h2 id="樣式變數的用法"><a href="#樣式變數的用法" class="headerlink" title="樣式變數的用法"></a>樣式變數的用法</h2><p>如果您想使用變數在您客製化的樣式檔案，您只須要做的是呼叫 <code>nb-theme(var-name)</code> function (在 <a href="https://akveo.github.io/nebular/docs/guides/enabling-theme-system" target="_blank" rel="noopener">successful setup of the Theme System</a> 詳細介紹</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'../../../@theme/styles/themes'</span>;</span><br><span class="line"></span><br><span class="line">:host &#123;</span><br><span class="line"></span><br><span class="line">  background: nb-theme(card-bg); <span class="comment">// and use it</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根據目前已經啟用的主題在您的主題檔案中繼承 <code>card-bg</code> 變數，您將得到正確的顏色。</p><hr><h2 id="已內建的主題"><a href="#已內建的主題" class="headerlink" title="已內建的主題"></a>已內建的主題</h2><p>目前有 3 個內建的主題：</p><ul><li><code>default</code> - 清晰的白色主題</li><li><code>cosmic</code> - 黑暗的主題</li><li><code>corporate</code> - 商業主題</li></ul><p>這些主題也可以互相繼承例如 <code>cosmic</code>　就是繼承於 <code>default</code> 主題.</p><hr><h2 id="「熱載-hot-reload」-多個主題的魔力"><a href="#「熱載-hot-reload」-多個主題的魔力" class="headerlink" title="「熱載 hot-reload」 多個主題的魔力"></a>「熱載 hot-reload」 多個主題的魔力</h2><p>您可以在 <a href="http://akveo.com/ngx-admin?utm_source=nebular_documentation&amp;utm_medium=doc_page" target="_blank" rel="noopener">ngx-admin demo</a> 看到，您可以切換主題而不需要重新載入頁面。<br>當每個使用者有多的視覺主題時或者您希望提供您的使用者這樣的配置，以便他可以決定哪一個主題最適合他時，這是很有用的。<br>這個功能唯一的要求是將您所有的元件樣式包裝在一個特定的 <code>nb-install-component</code> 中，並使用 <code>nb-theme</code> 取得正確的值:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">'../../../@theme/styles/themes'</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">include</span> nb-install-component() &#123;</span><br><span class="line">  <span class="attribute">background</span>: nb-theme(card-bg); <span class="comment">// 對於每一個被註冊的主題鑲嵌相對應的值</span></span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: nb-theme(color-bg);</span><br><span class="line">    <span class="attribute">font-weight</span>: nb-theme(font-weight-bold);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="/enabling-theme-system">啟用主題系統</a></li><li><a href="https://akveo.github.io/nebular/docs/themes/default" target="_blank" rel="noopener">Default Theme variables table</a></li><li><a href="https://akveo.github.io/nebular/docs/themes/cosmic" target="_blank" rel="noopener">Cosmic Theme variables table</a></li><li><a href="https://akveo.github.io/nebular/docs/themes/corporate" target="_blank" rel="noopener">Corporate Theme variables table</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 2.2. 安裝 nebular 到現有專案 | 中文</title>
      <link href="/install-into-existing/"/>
      <url>/install-into-existing/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/guides/add-into-existing-project#add-into-existing-project" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/guides/add-into-existing-project#add-into-existing-project</a></p><h1 id="安裝-nebular-到現有專案"><a href="#安裝-nebular-到現有專案" class="headerlink" title="安裝 nebular 到現有專案"></a>安裝 nebular 到現有專案</h1><p>如果你還沒有任何 angular 程式碼，請考慮查閱 <a href="https://cli.angular.io" target="_blank">Angular CLI</a> 文件，以幫助你建立 app。如果你想以我們 <code>ngx-admin</code> 入門套件為基礎，請查看 <a href="3.akveo-nebular-install-starter-kit">ANGULAR | akveo/nebular 系列 - 3. 入門套件 | 中文</a> 文章。</p><blockquote><p><strong>使用 ngx-admin 客製化元件</strong><br>請注意這個指南說明如何安裝 Nebular 模組到您的專案，包含主題系統、認證工具、UI 工具。<br>如果你想要重複使用 ngx-admin 的任何 <strong>客製化</strong> 元件(像是溫度小工具、儀表板圖表等 …) 不在使用 ngx-admin 本身時，請根據這個指南以及最後你只需要複製任何你需要的 ngx-admin 客製化元件到你的專案，並且註冊「主題模組」到你的模組中就可以了。</p></blockquote><h2 id="安裝相依函式庫"><a href="#安裝相依函式庫" class="headerlink" title="安裝相依函式庫"></a>安裝相依函式庫</h2><p>這個步驟，我們假設您已經安裝 Angular 模組。現在讓我們安裝 Angualr Bootstrap 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S bootstrap</span><br></pre></td></tr></table></figure><hr><h2 id="安裝-Nebular-模組"><a href="#安裝-Nebular-模組" class="headerlink" title="安裝 Nebular 模組"></a>安裝 Nebular 模組</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S @nebular/theme @nebular/auth @nebular/security</span><br></pre></td></tr></table></figure><p>如果在您的專案中不須要認證/安全的部分，您可以在上方的指令刪除 <code>@nebular/auth</code> 和 <code>@nebular/security</code>。</p><hr><h2 id="配置-Nebular"><a href="#配置-Nebular" class="headerlink" title="配置 Nebular"></a>配置 Nebular</h2><p>在這個階段您已經一切到位了，讓我們配置 Nebular 到 app 模組中。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; NbThemeModule &#125; <span class="keyword">from</span> <span class="string">'@nebular/theme'</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    ...</span><br><span class="line">    NbThemeModule.forRoot(&#123; name: <span class="string">'default'</span> &#125;), <span class="comment">// this will enable the default theme, you can change this to `cosmic` to enable the dark theme</span></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppModule &#123;</span><br></pre></td></tr></table></figure><p>以同樣的方式啟動 Auth 模組 (更多詳細內容在 <a href="https://akveo.github.io/nebular/docs/auth/conceptsinstall" target="_blank" rel="noopener">Auth Module Concepts &amp; Install</a> 文章).</p><hr><h2 id="安裝樣式"><a href="#安裝樣式" class="headerlink" title="安裝樣式"></a>安裝樣式</h2><p>現在讓我們引用 Nebular 樣式</p><p>包含 Bootstrap 以及 Nebular 預設主題 CSS 檔案到您的 <code>.angular-cli.json</code> 檔案中:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"styles": [</span><br><span class="line">  <span class="string">"../node_modules/bootstrap/dist/css/bootstrap.css"</span>,</span><br><span class="line">  <span class="string">"../node_modules/@nebular/theme/styles/prebuilt/default.css"</span>, // or cosmic.css</span><br><span class="line">],</span><br></pre></td></tr></table></figure><blockquote><p><strong>主題系統進階配置</strong><br>本文章我們描述非常基礎的樣式安裝。如果你需要更多進階功能，像是主題變數管理或是多個主題交換請查閱 <a href="https://akveo.github.io/nebular/docs/guides/enable-theme-system" target="_blank" rel="noopener">Enabling Theme System</a> 文章.</p></blockquote><h2 id="建立一個頁面"><a href="#建立一個頁面" class="headerlink" title="建立一個頁面"></a>建立一個頁面</h2><p>現在讓我們在您的專案中建立一個簡單的 Nebular 頁面 (header + sidebar)。我們假設每一頁面有一個模組，讓我們打開您的  <code>some-page.module.ts</code> 以及引用佈局元件 (layout components):</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; RouterModule &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>; <span class="comment">// we also need angular router for Nebular to function properly</span></span><br><span class="line"><span class="keyword">import</span> &#123; NbSidebarModule, NbLayoutModule, NbSidebarService &#125; <span class="keyword">from</span> <span class="string">'@nebular/theme'</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">  imports: [</span><br><span class="line">    RouterModule, <span class="comment">// RouterModule.forRoot(routes, &#123; useHash: true &#125;), if this is your app.module</span></span><br><span class="line">    NbLayoutModule,</span><br><span class="line">    NbSidebarModule,</span><br><span class="line">  ],</span><br><span class="line">  providers: [NbSidebarService], <span class="comment">// we need this service for the sidebar</span></span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> SomePageModule &#123;</span><br></pre></td></tr></table></figure><p>然後我們加入佈局元件 (layout components) 以及標題到您的 <code>some-page.component.ts</code>:<br><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;nb-layout&gt;</span></span><br><span class="line"><span class="string">      &lt;nb-layout-header fixed&gt;Company Name&lt;/nb-layout-header&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &lt;nb-sidebar&gt;Sidebar Content&lt;/nb-sidebar&gt;</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      &lt;nb-layout-column&gt;Page Content&lt;/nb-layout-column&gt;</span></span><br><span class="line"><span class="string">    &lt;/nb-layout&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> SomePageComponent &#123;</span><br></pre></td></tr></table></figure></p><p>完成! 在這個步驟你應該有個擁有簡單佈局的頁面如下所是：</p><p><img src="/assets/images/articles/sample-page.png" alt="image"></p><hr><blockquote><p><strong>加入到現有的 page 中</strong><br>如果您的頁面已經有一些程式碼了，您希望與 Nebular 元件合併使用。<br>您須要將頁面程式碼放置到這個 Nebular 佈局中。<code>&lt;nb-layout&gt;&lt;/nb-layout&gt;</code> 是 Nebular 工作所需的根元件。</p></blockquote><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="https://akveo.github.io/nebular/docs/guides/enable-theme-system" target="_blank" rel="noopener">Advanced Theme System configuration</a></li><li><a href="https://akveo.github.io/nebular/docs/guides/components-overview#advanced-setup" target="_blank" rel="noopener">Nebular UI Kit</a></li><li><a href="https://akveo.github.io/nebular/docs/components/layout" target="_blank" rel="noopener">NbLayout, NbLayoutColumn, NbLayoutHeader, NbLayoutFooter</a></li><li><a href="https://akveo.github.io/nebular/docs/guides/server-deployment" target="_blank" rel="noopener">Deploying to production server</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 2.1. 安裝入門套件 | 中文</title>
      <link href="/install-starter-kit/"/>
      <url>/install-starter-kit/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/guides/install-based-on-starter-kit#install-based-on-starter-kit" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/guides/install-based-on-starter-kit#install-based-on-starter-kit</a></p><h1 id="安裝入門套件"><a href="#安裝入門套件" class="headerlink" title="安裝入門套件"></a>安裝入門套件</h1><p>可以從 <a href="https://github.com/akveo/ngx-admin/" target="_blank">ngx-admin</a> 入門套件開始 Nebular 是最簡單的方法執行您的第一個 Nebular 應用程式。</p><p><strong>ngx-admin</strong> 只是一個前端應用程式，後端整合可以做地相對簡單，但請注意目前資料都使用 Javascript 物件模擬。<br>如果您想要動態取得資料，您應該考慮自己開發一個後端整合。<br>Nebular 團隊不提供通用的「整合層」作為這個專案的一部分，因為每個後端 API 在資料格式和 URLs 有不同的結構。</p><hr><h2 id="安裝工具"><a href="#安裝工具" class="headerlink" title="安裝工具"></a>安裝工具</h2><p>安裝 ngx-admin 到您的機器上前您需要先安裝以下工具:</p><ul><li>Git - <a href="https://git-scm.com" target="_blank">https://git-scm.com</a></li><li>Node.js - <a href="https://nodejs.org" target="_blank">https://nodejs.org</a>. 請注意 <strong>版本</strong> 應該是 <strong>&gt;=8</strong></li><li>Npm - Node.js package manager 是伴隨著 Node.js. 請確認 npm <strong>版本</strong> 是 <strong>&gt;=5</strong></li><li>您可能還需要一些特定的本機軟體包，具體取決於您的操作系統，像是在 Ubuntu 上需要 <code>build-essential</code>。</li></ul><blockquote><p><strong>警告!</strong><br>請注意到因為 Angular 的建構方式 <strong>沒有這些工具</strong> 是 <strong>不能</strong> 建置 ngx-admin 的。</p></blockquote><h2 id="下載程式碼"><a href="#下載程式碼" class="headerlink" title="下載程式碼"></a>下載程式碼</h2><p>當你完成工具的設置後，你需要下載 <code>ngx-admin</code> 應用程式的程式碼。最簡單的方式是複製 GitHub repository:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/akveo/ngx-admin.git</span><br></pre></td></tr></table></figure></p><p>在複製完成後，你需要安裝 npm 模組:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ngx-admin &amp;&amp; npm i</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>警告!</strong><br>請確認沒有錯誤的，成功地完成安裝。</p></blockquote><h2 id="執行本地副本"><a href="#執行本地副本" class="headerlink" title="執行本地副本"></a>執行本地副本</h2><p>於開發模式下執行本地副本可以執行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><p>Go to <a href="http://0.0.0.0:4200" target="_blank">http://0.0.0.0:4200</a> or <a href="http://localhost:4200" target="_blank">http://localhost:4200</a> in your browser.</p><hr><h2 id="建立產品包"><a href="#建立產品包" class="headerlink" title="建立產品包"></a>建立產品包</h2><p>於產品模式下建立一個產品包可以執行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build:prod</span><br></pre></td></tr></table></figure><p>這將會清除您的 <code>dist</code> 目錄 (放置 release 檔案的地方) 以及產生一個 release 建置。<br>現在您可以複製這些來自 <code>dist</code> 目錄的檔案以及將他們部署到後端框架或者簡單地 <a href="9.server-deployment">放置於網頁伺服器</a>。</p><hr><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><ul><li><a href="https://akveo.github.io/nebular/docs/guides/server-deployment" target="_blank" rel="noopener">部署到產品伺服器</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 1.2. 開始 nebular | 中文</title>
      <link href="/start/"/>
      <url>/start/</url>
      <content type="html"><![CDATA[<p>原文：<a href="https://akveo.github.io/nebular/docs/getting-started/where-to-start#where-to-start" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/getting-started/where-to-start#where-to-start</a></p><h1 id="從哪裡開始"><a href="#從哪裡開始" class="headerlink" title="從哪裡開始?"></a>從哪裡開始?</h1><p>Nebular 是針對 <a href="https://angular.io/" target="_blank">Angular</a> 開發的模組集合. 雖然不需要知道Angular 框架也可以建立你第一個 Nebular 專案，但強烈建議先閱讀 Angular 指南並熟悉 Angular 基本概念。</p><hr><h2 id="快速開始指南"><a href="#快速開始指南" class="headerlink" title="快速開始指南"></a>快速開始指南</h2><p>根據你專案目前的設定和你的目標，有兩個起始點: </p><ul><li><strong><a href="/3.akveo-nebular-install-starter-kit/">從 Nebular Admin 入門套件開始</a></strong> 如果你正在建立管理員儀表板或是任何後台應用程式以及你需要一個模板作為一個好的入門套件，可以考慮這個指南。</li><li><strong><a href="/4.akveo-nebular-install-into-existing/">安裝 nebular 到現有專案</a></strong> 如果你已經有一些 Angular 程式碼，可以參考這個指南，它解釋如何使用 Nebular。</li></ul><p>如果你的使用案例沒有在上述，請在 Github 建立一個 issue。但我們懇請先查閱文件和現有 issue 的列表。   </p><h2 id="我是-Angular-或是-Web-開發新手"><a href="#我是-Angular-或是-Web-開發新手" class="headerlink" title="我是 Angular 或是 Web 開發新手"></a>我是 Angular 或是 Web 開發新手</h2><p>我們經常收到對軟體工程或是 Angular 完全陌生的人的郵件或是訊息，要求我們提供建議。<br>Well，不幸的是，我們無法提供通用的方法，每個建議都針對特定的人和他目前擁有的技能和目的，這是為什麼我們相信每個人更了解自己。<br>有很多線上教育課程提供許多資源像是 <a href="https://www.udemy.com/angular-zero/?couponCode=ANGULAR.IO、https://www.coursera.org/、https://egghead.io/。" target="_blank" rel="noopener">https://www.udemy.com/angular-zero/?couponCode=ANGULAR.IO、https://www.coursera.org/、https://egghead.io/。</a> </p>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ANGULAR | akveo/nebular 系列 - 1.1. 什麼是 Nebular | 中文</title>
      <link href="/index/"/>
      <url>/index/</url>
      <content type="html"><![CDATA[<p>Github：<a href="https://github.com/akveo/nebular" target="_blank" rel="noopener">https://github.com/akveo/nebular</a><br>原文：<a href="https://akveo.github.io/nebular/docs/getting-started/what-is-nebular" target="_blank" rel="noopener">https://akveo.github.io/nebular/docs/getting-started/what-is-nebular</a></p><h1 id="什麼是-Nebular"><a href="#什麼是-Nebular" class="headerlink" title="什麼是 Nebular"></a>什麼是 Nebular</h1><blockquote><p>Nebular 是你下一個 Angular 應用程式的基礎模組集。這些模組的目的是更快更有效率地解決你的通用任務，以便你更專注於業務邏輯並把常規任務拋在後面。</p></blockquote><ol><li><p>Nebular Theme <code>@nebular/theme</code></p><ul><li>主題系統 - SCSS 規則集，允許你使用客製化的樣式和修改變數以調整應用程式的產品外觀。</li><li>UI 套件- 包含三種樣式主題的純 Angular 元件，沒有第三方相依。</li><li>覆寫 Bootstrap 樣式使應用程式有一致性的產品外觀。</li><li>伺服器端渲染兼容性。</li><li>所有的元件都支援由右向左的書寫系統 (如阿拉伯語系)</li></ul></li><li><p>Nebular Auth <code>@nebular/auth</code></p><ul><li>認證元件（登入/註冊/重置密碼/請求密碼）。</li><li>多種可配置身分驗證的策略（後端連結器）。</li><li>多種針對「通行許可證（token）」管理的小幫手（透過 HTTP request 儲存和傳輸通行許可證）。</li></ul></li><li><p>Nebular Security <code>@nebular/security</code></p><ul><li>模組針對角色以及權限管理</li></ul></li><li><p>儀表板管理入門套件 <a href="https://github.com/akveo/ngx-admin" target="_blank" rel="noopener"><code>ngx-admin</code></a> - 以 Nebular 模組為基礎的 Angular 應用程式，有漂亮的 IoT 儀表元件</p></li></ol><h1 id="其他想法"><a href="#其他想法" class="headerlink" title="其他想法"></a>其他想法</h1><ol><li><code>@nebular/dashboard</code> -針對儀表板建置，可拖拉 、調整大小的模組。</li><li><code>@nebular/data</code> - 應用程式資料與狀態的管理</li></ol>]]></content>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> akveo/nebular </tag>
            
            <tag> ngx-admin </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
